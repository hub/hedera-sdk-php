<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: state/history/history_types.proto

namespace Com\Hedera\Hapi\Node\State\History;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A node's vote for a particular history proof; either by explicitly
 * giving the proof, or by identifying a node that already voted for it.
 *
 * Generated from protobuf message <code>com.hedera.hapi.node.state.history.HistoryProofVote</code>
 */
class HistoryProofVote extends \Google\Protobuf\Internal\Message
{
    protected $vote;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Com\Hedera\Hapi\Node\State\History\HistoryProof $proof
     *          *
     *           The history proof the submitting node is voting for.
     *     @type int|string $congruent_node_id
     *          *
     *           The id of another node that already voted for the exact proof
     *           the submitting node is voting for.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\State\History\HistoryTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The history proof the submitting node is voting for.
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.history.HistoryProof proof = 1;</code>
     * @return \Com\Hedera\Hapi\Node\State\History\HistoryProof|null
     */
    public function getProof()
    {
        return $this->readOneof(1);
    }

    public function hasProof()
    {
        return $this->hasOneof(1);
    }

    /**
     **
     * The history proof the submitting node is voting for.
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.history.HistoryProof proof = 1;</code>
     * @param \Com\Hedera\Hapi\Node\State\History\HistoryProof $var
     * @return $this
     */
    public function setProof($var)
    {
        GPBUtil::checkMessage($var, \Com\Hedera\Hapi\Node\State\History\HistoryProof::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     **
     * The id of another node that already voted for the exact proof
     * the submitting node is voting for.
     *
     * Generated from protobuf field <code>uint64 congruent_node_id = 2;</code>
     * @return int|string
     */
    public function getCongruentNodeId()
    {
        return $this->readOneof(2);
    }

    public function hasCongruentNodeId()
    {
        return $this->hasOneof(2);
    }

    /**
     **
     * The id of another node that already voted for the exact proof
     * the submitting node is voting for.
     *
     * Generated from protobuf field <code>uint64 congruent_node_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCongruentNodeId($var)
    {
        GPBUtil::checkUint64($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getVote()
    {
        return $this->whichOneof("vote");
    }

}

