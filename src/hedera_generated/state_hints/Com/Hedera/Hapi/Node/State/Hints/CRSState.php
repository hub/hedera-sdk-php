<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: state/hints/hints_types.proto

namespace Com\Hedera\Hapi\Node\State\Hints;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * The state of a CRS construction.
 *
 * Generated from protobuf message <code>com.hedera.hapi.node.state.hints.CRSState</code>
 */
class CRSState extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * The bytes of the CRS. Based on the CRSStage, this may be the initial CRS
     * or the final CRS.
     *
     * Generated from protobuf field <code>bytes crs = 1;</code>
     */
    protected $crs = '';
    /**
     **
     * The stage of the CRS construction.
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.hints.CRSStage stage = 2;</code>
     */
    protected $stage = 0;
    /**
     **
     * The id of the next node that should contribute to the CRS. This is used
     * to ensure that all nodes contribute to the CRS in a round-robin fashion.
     * If this is null, then all nodes in the network have contributed to the CRS.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value next_contributing_node_id = 3;</code>
     */
    protected $next_contributing_node_id = null;
    /**
     **
     * The time at which the network should stop waiting for the node's contributions
     * and move on to the next node in the round-robin fashion.
     *
     * Generated from protobuf field <code>.proto.Timestamp contribution_end_time = 4;</code>
     */
    protected $contribution_end_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $crs
     *          *
     *           The bytes of the CRS. Based on the CRSStage, this may be the initial CRS
     *           or the final CRS.
     *     @type int $stage
     *          *
     *           The stage of the CRS construction.
     *     @type \Google\Protobuf\UInt64Value $next_contributing_node_id
     *          *
     *           The id of the next node that should contribute to the CRS. This is used
     *           to ensure that all nodes contribute to the CRS in a round-robin fashion.
     *           If this is null, then all nodes in the network have contributed to the CRS.
     *     @type \Proto\Timestamp $contribution_end_time
     *          *
     *           The time at which the network should stop waiting for the node's contributions
     *           and move on to the next node in the round-robin fashion.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\State\Hints\HintsTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The bytes of the CRS. Based on the CRSStage, this may be the initial CRS
     * or the final CRS.
     *
     * Generated from protobuf field <code>bytes crs = 1;</code>
     * @return string
     */
    public function getCrs()
    {
        return $this->crs;
    }

    /**
     **
     * The bytes of the CRS. Based on the CRSStage, this may be the initial CRS
     * or the final CRS.
     *
     * Generated from protobuf field <code>bytes crs = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCrs($var)
    {
        GPBUtil::checkString($var, False);
        $this->crs = $var;

        return $this;
    }

    /**
     **
     * The stage of the CRS construction.
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.hints.CRSStage stage = 2;</code>
     * @return int
     */
    public function getStage()
    {
        return $this->stage;
    }

    /**
     **
     * The stage of the CRS construction.
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.hints.CRSStage stage = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStage($var)
    {
        GPBUtil::checkEnum($var, \Com\Hedera\Hapi\Node\State\Hints\CRSStage::class);
        $this->stage = $var;

        return $this;
    }

    /**
     **
     * The id of the next node that should contribute to the CRS. This is used
     * to ensure that all nodes contribute to the CRS in a round-robin fashion.
     * If this is null, then all nodes in the network have contributed to the CRS.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value next_contributing_node_id = 3;</code>
     * @return \Google\Protobuf\UInt64Value|null
     */
    public function getNextContributingNodeId()
    {
        return $this->next_contributing_node_id;
    }

    public function hasNextContributingNodeId()
    {
        return isset($this->next_contributing_node_id);
    }

    public function clearNextContributingNodeId()
    {
        unset($this->next_contributing_node_id);
    }

    /**
     * Returns the unboxed value from <code>getNextContributingNodeId()</code>

     **
     * The id of the next node that should contribute to the CRS. This is used
     * to ensure that all nodes contribute to the CRS in a round-robin fashion.
     * If this is null, then all nodes in the network have contributed to the CRS.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value next_contributing_node_id = 3;</code>
     * @return int|string|null
     */
    public function getNextContributingNodeIdUnwrapped()
    {
        return $this->readWrapperValue("next_contributing_node_id");
    }

    /**
     **
     * The id of the next node that should contribute to the CRS. This is used
     * to ensure that all nodes contribute to the CRS in a round-robin fashion.
     * If this is null, then all nodes in the network have contributed to the CRS.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value next_contributing_node_id = 3;</code>
     * @param \Google\Protobuf\UInt64Value $var
     * @return $this
     */
    public function setNextContributingNodeId($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\UInt64Value::class);
        $this->next_contributing_node_id = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\UInt64Value object.

     **
     * The id of the next node that should contribute to the CRS. This is used
     * to ensure that all nodes contribute to the CRS in a round-robin fashion.
     * If this is null, then all nodes in the network have contributed to the CRS.
     *
     * Generated from protobuf field <code>.google.protobuf.UInt64Value next_contributing_node_id = 3;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setNextContributingNodeIdUnwrapped($var)
    {
        $this->writeWrapperValue("next_contributing_node_id", $var);
        return $this;}

    /**
     **
     * The time at which the network should stop waiting for the node's contributions
     * and move on to the next node in the round-robin fashion.
     *
     * Generated from protobuf field <code>.proto.Timestamp contribution_end_time = 4;</code>
     * @return \Proto\Timestamp|null
     */
    public function getContributionEndTime()
    {
        return $this->contribution_end_time;
    }

    public function hasContributionEndTime()
    {
        return isset($this->contribution_end_time);
    }

    public function clearContributionEndTime()
    {
        unset($this->contribution_end_time);
    }

    /**
     **
     * The time at which the network should stop waiting for the node's contributions
     * and move on to the next node in the round-robin fashion.
     *
     * Generated from protobuf field <code>.proto.Timestamp contribution_end_time = 4;</code>
     * @param \Proto\Timestamp $var
     * @return $this
     */
    public function setContributionEndTime($var)
    {
        GPBUtil::checkMessage($var, \Proto\Timestamp::class);
        $this->contribution_end_time = $var;

        return $this;
    }

}

