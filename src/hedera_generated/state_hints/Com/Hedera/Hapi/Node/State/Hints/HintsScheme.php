<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: state/hints/hints_types.proto

namespace Com\Hedera\Hapi\Node\State\Hints;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * The information constituting the hinTS scheme Hiero TSS.
 *
 * Generated from protobuf message <code>com.hedera.hapi.node.state.hints.HintsScheme</code>
 */
class HintsScheme extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * The aggregation and verification keys for the scheme.
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.hints.PreprocessedKeys preprocessed_keys = 1;</code>
     */
    protected $preprocessed_keys = null;
    /**
     **
     * The final party ids assigned to each node in the target roster.
     *
     * Generated from protobuf field <code>repeated .com.hedera.hapi.node.state.hints.NodePartyId node_party_ids = 2;</code>
     */
    private $node_party_ids;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Com\Hedera\Hapi\Node\State\Hints\PreprocessedKeys $preprocessed_keys
     *          *
     *           The aggregation and verification keys for the scheme.
     *     @type \Com\Hedera\Hapi\Node\State\Hints\NodePartyId[] $node_party_ids
     *          *
     *           The final party ids assigned to each node in the target roster.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\State\Hints\HintsTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The aggregation and verification keys for the scheme.
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.hints.PreprocessedKeys preprocessed_keys = 1;</code>
     * @return \Com\Hedera\Hapi\Node\State\Hints\PreprocessedKeys|null
     */
    public function getPreprocessedKeys()
    {
        return $this->preprocessed_keys;
    }

    public function hasPreprocessedKeys()
    {
        return isset($this->preprocessed_keys);
    }

    public function clearPreprocessedKeys()
    {
        unset($this->preprocessed_keys);
    }

    /**
     **
     * The aggregation and verification keys for the scheme.
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.hints.PreprocessedKeys preprocessed_keys = 1;</code>
     * @param \Com\Hedera\Hapi\Node\State\Hints\PreprocessedKeys $var
     * @return $this
     */
    public function setPreprocessedKeys($var)
    {
        GPBUtil::checkMessage($var, \Com\Hedera\Hapi\Node\State\Hints\PreprocessedKeys::class);
        $this->preprocessed_keys = $var;

        return $this;
    }

    /**
     **
     * The final party ids assigned to each node in the target roster.
     *
     * Generated from protobuf field <code>repeated .com.hedera.hapi.node.state.hints.NodePartyId node_party_ids = 2;</code>
     * @return RepeatedField<\Com\Hedera\Hapi\Node\State\Hints\NodePartyId>
     */
    public function getNodePartyIds()
    {
        return $this->node_party_ids;
    }

    /**
     **
     * The final party ids assigned to each node in the target roster.
     *
     * Generated from protobuf field <code>repeated .com.hedera.hapi.node.state.hints.NodePartyId node_party_ids = 2;</code>
     * @param \Com\Hedera\Hapi\Node\State\Hints\NodePartyId[] $var
     * @return $this
     */
    public function setNodePartyIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Com\Hedera\Hapi\Node\State\Hints\NodePartyId::class);
        $this->node_party_ids = $arr;

        return $this;
    }

}

