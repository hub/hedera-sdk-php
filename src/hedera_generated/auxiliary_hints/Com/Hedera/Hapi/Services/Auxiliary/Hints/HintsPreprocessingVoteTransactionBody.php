<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: auxiliary/hints/hints_preprocessing_vote.proto

namespace Com\Hedera\Hapi\Services\Auxiliary\Hints;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A transaction body to publish a node's vote for the results of
 * aggregating the hinTS keys for a specified construction id. The
 * node can either give their explicit aggregation results, or
 * delegate their vote to another node's results.
 *
 * Generated from protobuf message <code>com.hedera.hapi.services.auxiliary.hints.HintsPreprocessingVoteTransactionBody</code>
 */
class HintsPreprocessingVoteTransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * The id of the hinTS construction this vote is for. Because
     * the network only ever performs one construction a time, this
     * is somewhat redundant, but included to detect any strange
     * edge cases where a node is so far behind it votes on the wrong
     * construction.
     *
     * Generated from protobuf field <code>uint64 construction_id = 1;</code>
     */
    protected $construction_id = 0;
    /**
     **
     * The vote the node is casting for the aggregation of the hints
     * in the given construction (which should be ongoing).
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.hints.PreprocessingVote vote = 2;</code>
     */
    protected $vote = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $construction_id
     *          *
     *           The id of the hinTS construction this vote is for. Because
     *           the network only ever performs one construction a time, this
     *           is somewhat redundant, but included to detect any strange
     *           edge cases where a node is so far behind it votes on the wrong
     *           construction.
     *     @type \Com\Hedera\Hapi\Node\State\Hints\PreprocessingVote $vote
     *          *
     *           The vote the node is casting for the aggregation of the hints
     *           in the given construction (which should be ongoing).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Auxiliary\Hints\HintsPreprocessingVote::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The id of the hinTS construction this vote is for. Because
     * the network only ever performs one construction a time, this
     * is somewhat redundant, but included to detect any strange
     * edge cases where a node is so far behind it votes on the wrong
     * construction.
     *
     * Generated from protobuf field <code>uint64 construction_id = 1;</code>
     * @return int|string
     */
    public function getConstructionId()
    {
        return $this->construction_id;
    }

    /**
     **
     * The id of the hinTS construction this vote is for. Because
     * the network only ever performs one construction a time, this
     * is somewhat redundant, but included to detect any strange
     * edge cases where a node is so far behind it votes on the wrong
     * construction.
     *
     * Generated from protobuf field <code>uint64 construction_id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setConstructionId($var)
    {
        GPBUtil::checkUint64($var);
        $this->construction_id = $var;

        return $this;
    }

    /**
     **
     * The vote the node is casting for the aggregation of the hints
     * in the given construction (which should be ongoing).
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.hints.PreprocessingVote vote = 2;</code>
     * @return \Com\Hedera\Hapi\Node\State\Hints\PreprocessingVote|null
     */
    public function getVote()
    {
        return $this->vote;
    }

    public function hasVote()
    {
        return isset($this->vote);
    }

    public function clearVote()
    {
        unset($this->vote);
    }

    /**
     **
     * The vote the node is casting for the aggregation of the hints
     * in the given construction (which should be ongoing).
     *
     * Generated from protobuf field <code>.com.hedera.hapi.node.state.hints.PreprocessingVote vote = 2;</code>
     * @param \Com\Hedera\Hapi\Node\State\Hints\PreprocessingVote $var
     * @return $this
     */
    public function setVote($var)
    {
        GPBUtil::checkMessage($var, \Com\Hedera\Hapi\Node\State\Hints\PreprocessingVote::class);
        $this->vote = $var;

        return $this;
    }

}

