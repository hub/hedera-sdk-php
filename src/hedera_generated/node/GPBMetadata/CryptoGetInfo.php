<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: crypto_get_info.proto

namespace GPBMetadata;

class CryptoGetInfo
{
    public static $is_initialized = false;

    public static function initOnce() {
        $pool = \Google\Protobuf\Internal\DescriptorPool::getGeneratedPool();

        if (static::$is_initialized == true) {
          return;
        }
        \GPBMetadata\Timestamp::initOnce();
        \GPBMetadata\Duration::initOnce();
        \GPBMetadata\BasicTypes::initOnce();
        \GPBMetadata\QueryHeader::initOnce();
        \GPBMetadata\ResponseHeader::initOnce();
        \GPBMetadata\CryptoAddLiveHash::initOnce();
        $pool->internalAddGeneratedFile(
            "\x0A\xC5\x08\x0A\x15crypto_get_info.proto\x12\x05proto\x1A\x0Eduration.proto\x1A\x11basic_types.proto\x1A\x12query_header.proto\x1A\x15response_header.proto\x1A\x1Acrypto_add_live_hash.proto\"]\x0A\x12CryptoGetInfoQuery\x12\"\x0A\x06header\x18\x01 \x01(\x0B2\x12.proto.QueryHeader\x12#\x0A\x09accountID\x18\x02 \x01(\x0B2\x10.proto.AccountID\"\xAB\x06\x0A\x15CryptoGetInfoResponse\x12%\x0A\x06header\x18\x01 \x01(\x0B2\x15.proto.ResponseHeader\x12=\x0A\x0BaccountInfo\x18\x02 \x01(\x0B2(.proto.CryptoGetInfoResponse.AccountInfo\x1A\xAB\x05\x0A\x0BAccountInfo\x12#\x0A\x09accountID\x18\x01 \x01(\x0B2\x10.proto.AccountID\x12\x19\x0A\x11contractAccountID\x18\x02 \x01(\x09\x12\x0F\x0A\x07deleted\x18\x03 \x01(\x08\x12,\x0A\x0EproxyAccountID\x18\x04 \x01(\x0B2\x10.proto.AccountIDB\x02\x18\x01\x12\x19\x0A\x0DproxyReceived\x18\x06 \x01(\x03B\x02\x18\x01\x12\x17\x0A\x03key\x18\x07 \x01(\x0B2\x0A.proto.Key\x12\x0F\x0A\x07balance\x18\x08 \x01(\x04\x12'\x0A\x1BgenerateSendRecordThreshold\x18\x09 \x01(\x04B\x02\x18\x01\x12*\x0A\x1EgenerateReceiveRecordThreshold\x18\x0A \x01(\x04B\x02\x18\x01\x12\x1B\x0A\x13receiverSigRequired\x18\x0B \x01(\x08\x12(\x0A\x0EexpirationTime\x18\x0C \x01(\x0B2\x10.proto.Timestamp\x12(\x0A\x0FautoRenewPeriod\x18\x0D \x01(\x0B2\x0F.proto.Duration\x12#\x0A\x0AliveHashes\x18\x0E \x03(\x0B2\x0F.proto.LiveHash\x128\x0A\x12tokenRelationships\x18\x0F \x03(\x0B2\x18.proto.TokenRelationshipB\x02\x18\x01\x12\x0C\x0A\x04memo\x18\x10 \x01(\x09\x12\x11\x0A\x09ownedNfts\x18\x11 \x01(\x03\x12(\x0A max_automatic_token_associations\x18\x12 \x01(\x05\x12\x0D\x0A\x05alias\x18\x13 \x01(\x0C\x12\x11\x0A\x09ledger_id\x18\x14 \x01(\x0C\x12\x16\x0A\x0Eethereum_nonce\x18\x15 \x01(\x03\x12(\x0A\x0Cstaking_info\x18\x16 \x01(\x0B2\x12.proto.StakingInfoJ\x04\x08\x05\x10\x06B&\x0A\"com.hederahashgraph.api.proto.javaP\x01b\x06proto3"
        , true);

        static::$is_initialized = true;
    }
}

