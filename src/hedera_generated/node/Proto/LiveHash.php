<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: crypto_add_live_hash.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A Live Hash value associating some item of content to an account.
 * This message represents a desired entry in the ledger for a SHA-384
 * hash of some content, an associated specific account, a list of authorized
 * keys, and a duration the live hash is "valid".
 *
 * Generated from protobuf message <code>proto.LiveHash</code>
 */
class LiveHash extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * An account associated via this live hash to the hashed content.
     *
     * Generated from protobuf field <code>.proto.AccountID accountId = 1;</code>
     */
    protected $accountId = null;
    /**
     **
     * A SHA-384 hash of some content that is associated to the account
     * or account holder.
     *
     * Generated from protobuf field <code>bytes hash = 2;</code>
     */
    protected $hash = '';
    /**
     **
     * A list of keys, all of which MUST sign the transaction to add the
     * live hash.<br/>
     * Any one of these keys may, however, remove the live hash to revoke
     * the association.
     *
     * Generated from protobuf field <code>.proto.KeyList keys = 3;</code>
     */
    protected $keys = null;
    /**
     **
     * A duration describing how long this Live Hash SHALL remain valid.<br/>
     * A Live Hash SHOULD NOT be relied upon after this duration has elapsed.
     *
     * Generated from protobuf field <code>.proto.Duration duration = 5;</code>
     */
    protected $duration = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\AccountID $accountId
     *          *
     *           An account associated via this live hash to the hashed content.
     *     @type string $hash
     *          *
     *           A SHA-384 hash of some content that is associated to the account
     *           or account holder.
     *     @type \Proto\KeyList $keys
     *          *
     *           A list of keys, all of which MUST sign the transaction to add the
     *           live hash.<br/>
     *           Any one of these keys may, however, remove the live hash to revoke
     *           the association.
     *     @type \Proto\Duration $duration
     *          *
     *           A duration describing how long this Live Hash SHALL remain valid.<br/>
     *           A Live Hash SHOULD NOT be relied upon after this duration has elapsed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\CryptoAddLiveHash::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * An account associated via this live hash to the hashed content.
     *
     * Generated from protobuf field <code>.proto.AccountID accountId = 1;</code>
     * @return \Proto\AccountID|null
     */
    public function getAccountId()
    {
        return $this->accountId;
    }

    public function hasAccountId()
    {
        return isset($this->accountId);
    }

    public function clearAccountId()
    {
        unset($this->accountId);
    }

    /**
     **
     * An account associated via this live hash to the hashed content.
     *
     * Generated from protobuf field <code>.proto.AccountID accountId = 1;</code>
     * @param \Proto\AccountID $var
     * @return $this
     */
    public function setAccountId($var)
    {
        GPBUtil::checkMessage($var, \Proto\AccountID::class);
        $this->accountId = $var;

        return $this;
    }

    /**
     **
     * A SHA-384 hash of some content that is associated to the account
     * or account holder.
     *
     * Generated from protobuf field <code>bytes hash = 2;</code>
     * @return string
     */
    public function getHash()
    {
        return $this->hash;
    }

    /**
     **
     * A SHA-384 hash of some content that is associated to the account
     * or account holder.
     *
     * Generated from protobuf field <code>bytes hash = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->hash = $var;

        return $this;
    }

    /**
     **
     * A list of keys, all of which MUST sign the transaction to add the
     * live hash.<br/>
     * Any one of these keys may, however, remove the live hash to revoke
     * the association.
     *
     * Generated from protobuf field <code>.proto.KeyList keys = 3;</code>
     * @return \Proto\KeyList|null
     */
    public function getKeys()
    {
        return $this->keys;
    }

    public function hasKeys()
    {
        return isset($this->keys);
    }

    public function clearKeys()
    {
        unset($this->keys);
    }

    /**
     **
     * A list of keys, all of which MUST sign the transaction to add the
     * live hash.<br/>
     * Any one of these keys may, however, remove the live hash to revoke
     * the association.
     *
     * Generated from protobuf field <code>.proto.KeyList keys = 3;</code>
     * @param \Proto\KeyList $var
     * @return $this
     */
    public function setKeys($var)
    {
        GPBUtil::checkMessage($var, \Proto\KeyList::class);
        $this->keys = $var;

        return $this;
    }

    /**
     **
     * A duration describing how long this Live Hash SHALL remain valid.<br/>
     * A Live Hash SHOULD NOT be relied upon after this duration has elapsed.
     *
     * Generated from protobuf field <code>.proto.Duration duration = 5;</code>
     * @return \Proto\Duration|null
     */
    public function getDuration()
    {
        return $this->duration;
    }

    public function hasDuration()
    {
        return isset($this->duration);
    }

    public function clearDuration()
    {
        unset($this->duration);
    }

    /**
     **
     * A duration describing how long this Live Hash SHALL remain valid.<br/>
     * A Live Hash SHOULD NOT be relied upon after this duration has elapsed.
     *
     * Generated from protobuf field <code>.proto.Duration duration = 5;</code>
     * @param \Proto\Duration $var
     * @return $this
     */
    public function setDuration($var)
    {
        GPBUtil::checkMessage($var, \Proto\Duration::class);
        $this->duration = $var;

        return $this;
    }

}

