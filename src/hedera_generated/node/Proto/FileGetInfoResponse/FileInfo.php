<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: file_get_info.proto

namespace Proto\FileGetInfoResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 * Generated from protobuf message <code>proto.FileGetInfoResponse.FileInfo</code>
 */
class FileInfo extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A file identifier.
     * <p>
     * This SHALL be the identifier of a file that exists in HFS.<br/>
     * This value SHALL identify the file that was queried.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 1;</code>
     */
    protected $fileID = null;
    /**
     **
     * A size, in bytes, for the file.
     *
     * Generated from protobuf field <code>int64 size = 2;</code>
     */
    protected $size = 0;
    /**
     **
     * An expiration timestamp.
     * <p>
     * The file SHALL NOT expire before the network consensus time
     * exceeds this value.<br/>
     * The file SHALL expire after the network consensus time
     * exceeds this value.<br/>
     *
     * Generated from protobuf field <code>.proto.Timestamp expirationTime = 3;</code>
     */
    protected $expirationTime = null;
    /**
     **
     * A flag indicating this file is deleted.
     * <p>
     * A deleted file SHALL have a size `0` and empty content.
     *
     * Generated from protobuf field <code>bool deleted = 4;</code>
     */
    protected $deleted = false;
    /**
     **
     * A KeyList listing all keys that "own" the file.
     * <p>
     * All keys in this list MUST sign a transaction to append to the
     * file content, or to modify file metadata.<br/>
     * At least _one_ key in this list MUST sign a transaction to delete
     * this file.<br/>
     * If this is an empty `KeyList`, the file is immutable, cannot be
     * modified or deleted, but MAY expire. A `fileUpdate` transaction MAY
     * extend the expiration time for an immutable file.
     *
     * Generated from protobuf field <code>.proto.KeyList keys = 5;</code>
     */
    protected $keys = null;
    /**
     **
     * A short description for this file.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.
     *
     * Generated from protobuf field <code>string memo = 6;</code>
     */
    protected $memo = '';
    /**
     **
     * A ledger identifier for the responding network.
     * <p>
     * This value SHALL identify the distributed ledger that responded to
     * this query.
     *
     * Generated from protobuf field <code>bytes ledger_id = 7;</code>
     */
    protected $ledger_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\FileID $fileID
     *          *
     *           A file identifier.
     *           <p>
     *           This SHALL be the identifier of a file that exists in HFS.<br/>
     *           This value SHALL identify the file that was queried.
     *     @type int|string $size
     *          *
     *           A size, in bytes, for the file.
     *     @type \Proto\Timestamp $expirationTime
     *          *
     *           An expiration timestamp.
     *           <p>
     *           The file SHALL NOT expire before the network consensus time
     *           exceeds this value.<br/>
     *           The file SHALL expire after the network consensus time
     *           exceeds this value.<br/>
     *     @type bool $deleted
     *          *
     *           A flag indicating this file is deleted.
     *           <p>
     *           A deleted file SHALL have a size `0` and empty content.
     *     @type \Proto\KeyList $keys
     *          *
     *           A KeyList listing all keys that "own" the file.
     *           <p>
     *           All keys in this list MUST sign a transaction to append to the
     *           file content, or to modify file metadata.<br/>
     *           At least _one_ key in this list MUST sign a transaction to delete
     *           this file.<br/>
     *           If this is an empty `KeyList`, the file is immutable, cannot be
     *           modified or deleted, but MAY expire. A `fileUpdate` transaction MAY
     *           extend the expiration time for an immutable file.
     *     @type string $memo
     *          *
     *           A short description for this file.
     *           <p>
     *           This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     *           (default 100) bytes when encoded as UTF-8.
     *     @type string $ledger_id
     *          *
     *           A ledger identifier for the responding network.
     *           <p>
     *           This value SHALL identify the distributed ledger that responded to
     *           this query.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\FileGetInfo::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A file identifier.
     * <p>
     * This SHALL be the identifier of a file that exists in HFS.<br/>
     * This value SHALL identify the file that was queried.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 1;</code>
     * @return \Proto\FileID|null
     */
    public function getFileID()
    {
        return $this->fileID;
    }

    public function hasFileID()
    {
        return isset($this->fileID);
    }

    public function clearFileID()
    {
        unset($this->fileID);
    }

    /**
     **
     * A file identifier.
     * <p>
     * This SHALL be the identifier of a file that exists in HFS.<br/>
     * This value SHALL identify the file that was queried.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 1;</code>
     * @param \Proto\FileID $var
     * @return $this
     */
    public function setFileID($var)
    {
        GPBUtil::checkMessage($var, \Proto\FileID::class);
        $this->fileID = $var;

        return $this;
    }

    /**
     **
     * A size, in bytes, for the file.
     *
     * Generated from protobuf field <code>int64 size = 2;</code>
     * @return int|string
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     **
     * A size, in bytes, for the file.
     *
     * Generated from protobuf field <code>int64 size = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->size = $var;

        return $this;
    }

    /**
     **
     * An expiration timestamp.
     * <p>
     * The file SHALL NOT expire before the network consensus time
     * exceeds this value.<br/>
     * The file SHALL expire after the network consensus time
     * exceeds this value.<br/>
     *
     * Generated from protobuf field <code>.proto.Timestamp expirationTime = 3;</code>
     * @return \Proto\Timestamp|null
     */
    public function getExpirationTime()
    {
        return $this->expirationTime;
    }

    public function hasExpirationTime()
    {
        return isset($this->expirationTime);
    }

    public function clearExpirationTime()
    {
        unset($this->expirationTime);
    }

    /**
     **
     * An expiration timestamp.
     * <p>
     * The file SHALL NOT expire before the network consensus time
     * exceeds this value.<br/>
     * The file SHALL expire after the network consensus time
     * exceeds this value.<br/>
     *
     * Generated from protobuf field <code>.proto.Timestamp expirationTime = 3;</code>
     * @param \Proto\Timestamp $var
     * @return $this
     */
    public function setExpirationTime($var)
    {
        GPBUtil::checkMessage($var, \Proto\Timestamp::class);
        $this->expirationTime = $var;

        return $this;
    }

    /**
     **
     * A flag indicating this file is deleted.
     * <p>
     * A deleted file SHALL have a size `0` and empty content.
     *
     * Generated from protobuf field <code>bool deleted = 4;</code>
     * @return bool
     */
    public function getDeleted()
    {
        return $this->deleted;
    }

    /**
     **
     * A flag indicating this file is deleted.
     * <p>
     * A deleted file SHALL have a size `0` and empty content.
     *
     * Generated from protobuf field <code>bool deleted = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setDeleted($var)
    {
        GPBUtil::checkBool($var);
        $this->deleted = $var;

        return $this;
    }

    /**
     **
     * A KeyList listing all keys that "own" the file.
     * <p>
     * All keys in this list MUST sign a transaction to append to the
     * file content, or to modify file metadata.<br/>
     * At least _one_ key in this list MUST sign a transaction to delete
     * this file.<br/>
     * If this is an empty `KeyList`, the file is immutable, cannot be
     * modified or deleted, but MAY expire. A `fileUpdate` transaction MAY
     * extend the expiration time for an immutable file.
     *
     * Generated from protobuf field <code>.proto.KeyList keys = 5;</code>
     * @return \Proto\KeyList|null
     */
    public function getKeys()
    {
        return $this->keys;
    }

    public function hasKeys()
    {
        return isset($this->keys);
    }

    public function clearKeys()
    {
        unset($this->keys);
    }

    /**
     **
     * A KeyList listing all keys that "own" the file.
     * <p>
     * All keys in this list MUST sign a transaction to append to the
     * file content, or to modify file metadata.<br/>
     * At least _one_ key in this list MUST sign a transaction to delete
     * this file.<br/>
     * If this is an empty `KeyList`, the file is immutable, cannot be
     * modified or deleted, but MAY expire. A `fileUpdate` transaction MAY
     * extend the expiration time for an immutable file.
     *
     * Generated from protobuf field <code>.proto.KeyList keys = 5;</code>
     * @param \Proto\KeyList $var
     * @return $this
     */
    public function setKeys($var)
    {
        GPBUtil::checkMessage($var, \Proto\KeyList::class);
        $this->keys = $var;

        return $this;
    }

    /**
     **
     * A short description for this file.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.
     *
     * Generated from protobuf field <code>string memo = 6;</code>
     * @return string
     */
    public function getMemo()
    {
        return $this->memo;
    }

    /**
     **
     * A short description for this file.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.
     *
     * Generated from protobuf field <code>string memo = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setMemo($var)
    {
        GPBUtil::checkString($var, True);
        $this->memo = $var;

        return $this;
    }

    /**
     **
     * A ledger identifier for the responding network.
     * <p>
     * This value SHALL identify the distributed ledger that responded to
     * this query.
     *
     * Generated from protobuf field <code>bytes ledger_id = 7;</code>
     * @return string
     */
    public function getLedgerId()
    {
        return $this->ledger_id;
    }

    /**
     **
     * A ledger identifier for the responding network.
     * <p>
     * This value SHALL identify the distributed ledger that responded to
     * this query.
     *
     * Generated from protobuf field <code>bytes ledger_id = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setLedgerId($var)
    {
        GPBUtil::checkString($var, False);
        $this->ledger_id = $var;

        return $this;
    }

}

