<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: basic_types.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A network node endpoint.<br/>
 * Each network node in the global address book publishes one or more endpoints
 * which enable the nodes to communicate both with other nodes, for gossip, and
 * with clients to receive transaction requests.
 * This message supports IPv4 with address and TCP port,
 * and MAY include a FQDN instead of an IP address.<br/>
 * IPv6 is not currently supported.
 * When the `domain_name` field is set, the `ipAddressV4` field
 * MUST NOT be set.<br/>
 * When the `ipAddressV4` field is set, the `domain_name` field
 * MUST NOT be set.
 *
 * Generated from protobuf message <code>proto.ServiceEndpoint</code>
 */
class ServiceEndpoint extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A 32-bit IPv4 address.<br/>
     * This is the address of the endpoint, encoded in pure "big-endian"
     * (i.e. left to right) order (e.g. `127.0.0.1` has hex bytes in the
     * order `7F`, `00`, `00`, `01`).
     *
     * Generated from protobuf field <code>bytes ipAddressV4 = 1;</code>
     */
    protected $ipAddressV4 = '';
    /**
     **
     * A TCP port to use.
     * <p>
     * This value MUST be between 0 and 65535, inclusive.
     *
     * Generated from protobuf field <code>int32 port = 2;</code>
     */
    protected $port = 0;
    /**
     **
     * A node domain name.
     * <p>
     * This MUST be the fully qualified domain name of the node.<br/>
     * This value MUST NOT exceed 253 characters.<br/>
     * When the `domain_name` field is set, the `ipAddressV4`
     * field MUST NOT be set.<br/>
     * When the `ipAddressV4` field is set, the `domain_name`
     * field MUST NOT be set.
     *
     * Generated from protobuf field <code>string domain_name = 3;</code>
     */
    protected $domain_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $ipAddressV4
     *          *
     *           A 32-bit IPv4 address.<br/>
     *           This is the address of the endpoint, encoded in pure "big-endian"
     *           (i.e. left to right) order (e.g. `127.0.0.1` has hex bytes in the
     *           order `7F`, `00`, `00`, `01`).
     *     @type int $port
     *          *
     *           A TCP port to use.
     *           <p>
     *           This value MUST be between 0 and 65535, inclusive.
     *     @type string $domain_name
     *          *
     *           A node domain name.
     *           <p>
     *           This MUST be the fully qualified domain name of the node.<br/>
     *           This value MUST NOT exceed 253 characters.<br/>
     *           When the `domain_name` field is set, the `ipAddressV4`
     *           field MUST NOT be set.<br/>
     *           When the `ipAddressV4` field is set, the `domain_name`
     *           field MUST NOT be set.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\BasicTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A 32-bit IPv4 address.<br/>
     * This is the address of the endpoint, encoded in pure "big-endian"
     * (i.e. left to right) order (e.g. `127.0.0.1` has hex bytes in the
     * order `7F`, `00`, `00`, `01`).
     *
     * Generated from protobuf field <code>bytes ipAddressV4 = 1;</code>
     * @return string
     */
    public function getIpAddressV4()
    {
        return $this->ipAddressV4;
    }

    /**
     **
     * A 32-bit IPv4 address.<br/>
     * This is the address of the endpoint, encoded in pure "big-endian"
     * (i.e. left to right) order (e.g. `127.0.0.1` has hex bytes in the
     * order `7F`, `00`, `00`, `01`).
     *
     * Generated from protobuf field <code>bytes ipAddressV4 = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setIpAddressV4($var)
    {
        GPBUtil::checkString($var, False);
        $this->ipAddressV4 = $var;

        return $this;
    }

    /**
     **
     * A TCP port to use.
     * <p>
     * This value MUST be between 0 and 65535, inclusive.
     *
     * Generated from protobuf field <code>int32 port = 2;</code>
     * @return int
     */
    public function getPort()
    {
        return $this->port;
    }

    /**
     **
     * A TCP port to use.
     * <p>
     * This value MUST be between 0 and 65535, inclusive.
     *
     * Generated from protobuf field <code>int32 port = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPort($var)
    {
        GPBUtil::checkInt32($var);
        $this->port = $var;

        return $this;
    }

    /**
     **
     * A node domain name.
     * <p>
     * This MUST be the fully qualified domain name of the node.<br/>
     * This value MUST NOT exceed 253 characters.<br/>
     * When the `domain_name` field is set, the `ipAddressV4`
     * field MUST NOT be set.<br/>
     * When the `ipAddressV4` field is set, the `domain_name`
     * field MUST NOT be set.
     *
     * Generated from protobuf field <code>string domain_name = 3;</code>
     * @return string
     */
    public function getDomainName()
    {
        return $this->domain_name;
    }

    /**
     **
     * A node domain name.
     * <p>
     * This MUST be the fully qualified domain name of the node.<br/>
     * This value MUST NOT exceed 253 characters.<br/>
     * When the `domain_name` field is set, the `ipAddressV4`
     * field MUST NOT be set.<br/>
     * When the `ipAddressV4` field is set, the `domain_name`
     * field MUST NOT be set.
     *
     * Generated from protobuf field <code>string domain_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDomainName($var)
    {
        GPBUtil::checkString($var, True);
        $this->domain_name = $var;

        return $this;
    }

}

