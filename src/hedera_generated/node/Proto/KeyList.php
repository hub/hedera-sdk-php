<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: basic_types.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A list of keys.<br/>
 * A `KeyList` requires all keys (N-of-N) to sign, unless otherwise
 * specified in official documentation. A KeyList may contain repeated keys,
 * but all such repeated keys are considered a single key when determining
 * signature authorization.
 * ### Additional Notes
 * 1. An empty key list is the "standard" mechanism to represent an
 *    unassigned key. For example, if the `admin_key` of a token is set
 *    to the empty key list, then that token has no admin key, and
 *    functionality that requires an admin key to sign the
 *    transaction is disabled.
 *
 * Generated from protobuf message <code>proto.KeyList</code>
 */
class KeyList extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A list of keys. All values in this list SHALL be non-null.
     * <p>
     *
     * Generated from protobuf field <code>repeated .proto.Key keys = 1;</code>
     */
    private $keys;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\Key[] $keys
     *          *
     *           A list of keys. All values in this list SHALL be non-null.
     *           <p>
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\BasicTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A list of keys. All values in this list SHALL be non-null.
     * <p>
     *
     * Generated from protobuf field <code>repeated .proto.Key keys = 1;</code>
     * @return RepeatedField<\Proto\Key>
     */
    public function getKeys()
    {
        return $this->keys;
    }

    /**
     **
     * A list of keys. All values in this list SHALL be non-null.
     * <p>
     *
     * Generated from protobuf field <code>repeated .proto.Key keys = 1;</code>
     * @param \Proto\Key[] $var
     * @return $this
     */
    public function setKeys($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Proto\Key::class);
        $this->keys = $arr;

        return $this;
    }

}

