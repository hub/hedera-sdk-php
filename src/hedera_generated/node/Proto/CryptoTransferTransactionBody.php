<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: crypto_transfer.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Transfer HBAR and/or other tokens among two or more accounts and/or smart
 * contracts.
 * Transfers of HBAR or fungible/common tokens in this transaction are
 * structured as a "double-entry" transfer list which debits one or more
 * accounts, and separately credits one or more accounts. Each such transfer
 * list may specify up to 10 individual credits or debits.<br/>
 * Transfers of non-fungible/unique tokens in this transaction are
 * structured as a "single-entry" transfer list, which both debits one account
 * and credits another account in a single entry.
 * At least one transfer MUST be present, this MAY be an HBAR transfer in
 * `transfers`, or MAY be a token transfer in `tokenTransfers`.<br/>
 * Either `transfers` or `tokenTransfers` MAY be unset, provided the other
 * is set and not empty.<br/>
 * If any one account with a debit in any transfer list holds insufficient
 * balance to complete the transfer, the entire transaction SHALL fail, and
 * all transfers SHALL NOT be completed.<br/>
 * If any one account that is _sending_ an individual non-fungible/unique (NFT)
 * token does not currently hold that unique NFT, the entire transaction SHALL
 * FAIL, and all transfers SHALL NOT be completed.
 * The transaction fee SHALL be charged for a transaction that fails due to
 * insufficient balance or not holding the NFT to be transferred.<br/>
 * Each account with any debit amounts in any transfer list MUST sign this
 * transaction.<br/>
 * Each account with any credit amounts in any transfer list that also has the
 * `receiverSigRequired` flag set MUST sign this transaction.
 * ### Block Stream Effects
 * All debits and credits completed by this transaction SHALL be included in
 * the transaction result transfer list.<br/>
 * Multiple fungible/common debits from one account, or credits to one account,
 * MAY be consolidated to a single debit or credit entry in the
 * transaction result.<br/>
 * Multiple non-fungible/unique transfers SHALL NOT be consolidated in the
 * transaction result.
 *
 * Generated from protobuf message <code>proto.CryptoTransferTransactionBody</code>
 */
class CryptoTransferTransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A list of HBAR transfers.
     * <p>
     * Each transfer in this list MUST be denominated in tinybar.
     *
     * Generated from protobuf field <code>.proto.TransferList transfers = 1;</code>
     */
    protected $transfers = null;
    /**
     **
     * One or more lists of token transfers.
     * <p>
     * This list MUST NOT contain more than 10 entries.<br/>
     * If custom fees must be charged, the fee SHALL be assessed against the
     * effective "payer" for this transaction.<br/>
     * If the effective "payer" for this transaction lacks sufficient balance
     * to pay custom fees assessed, the entire transaction SHALL fail with a
     * response code `INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE`.
     *
     * Generated from protobuf field <code>repeated .proto.TokenTransferList tokenTransfers = 2;</code>
     */
    private $tokenTransfers;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\TransferList $transfers
     *          *
     *           A list of HBAR transfers.
     *           <p>
     *           Each transfer in this list MUST be denominated in tinybar.
     *     @type \Proto\TokenTransferList[] $tokenTransfers
     *          *
     *           One or more lists of token transfers.
     *           <p>
     *           This list MUST NOT contain more than 10 entries.<br/>
     *           If custom fees must be charged, the fee SHALL be assessed against the
     *           effective "payer" for this transaction.<br/>
     *           If the effective "payer" for this transaction lacks sufficient balance
     *           to pay custom fees assessed, the entire transaction SHALL fail with a
     *           response code `INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\CryptoTransfer::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A list of HBAR transfers.
     * <p>
     * Each transfer in this list MUST be denominated in tinybar.
     *
     * Generated from protobuf field <code>.proto.TransferList transfers = 1;</code>
     * @return \Proto\TransferList|null
     */
    public function getTransfers()
    {
        return $this->transfers;
    }

    public function hasTransfers()
    {
        return isset($this->transfers);
    }

    public function clearTransfers()
    {
        unset($this->transfers);
    }

    /**
     **
     * A list of HBAR transfers.
     * <p>
     * Each transfer in this list MUST be denominated in tinybar.
     *
     * Generated from protobuf field <code>.proto.TransferList transfers = 1;</code>
     * @param \Proto\TransferList $var
     * @return $this
     */
    public function setTransfers($var)
    {
        GPBUtil::checkMessage($var, \Proto\TransferList::class);
        $this->transfers = $var;

        return $this;
    }

    /**
     **
     * One or more lists of token transfers.
     * <p>
     * This list MUST NOT contain more than 10 entries.<br/>
     * If custom fees must be charged, the fee SHALL be assessed against the
     * effective "payer" for this transaction.<br/>
     * If the effective "payer" for this transaction lacks sufficient balance
     * to pay custom fees assessed, the entire transaction SHALL fail with a
     * response code `INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE`.
     *
     * Generated from protobuf field <code>repeated .proto.TokenTransferList tokenTransfers = 2;</code>
     * @return RepeatedField<\Proto\TokenTransferList>
     */
    public function getTokenTransfers()
    {
        return $this->tokenTransfers;
    }

    /**
     **
     * One or more lists of token transfers.
     * <p>
     * This list MUST NOT contain more than 10 entries.<br/>
     * If custom fees must be charged, the fee SHALL be assessed against the
     * effective "payer" for this transaction.<br/>
     * If the effective "payer" for this transaction lacks sufficient balance
     * to pay custom fees assessed, the entire transaction SHALL fail with a
     * response code `INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE`.
     *
     * Generated from protobuf field <code>repeated .proto.TokenTransferList tokenTransfers = 2;</code>
     * @param \Proto\TokenTransferList[] $var
     * @return $this
     */
    public function setTokenTransfers($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Proto\TokenTransferList::class);
        $this->tokenTransfers = $arr;

        return $this;
    }

}

