<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: token_unpause.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Resume transaction activity for a token.
 * This transaction MUST be signed by the Token `pause_key`.<br/>
 * The `token` identified MUST exist, and MUST NOT be deleted.<br/>
 * The `token` identified MAY not be paused; if the token is not paused,
 * this transaction SHALL have no effect.
 * The `token` identified MUST have a `pause_key` set, the `pause_key` MUST be
 * a valid `Key`, and the `pause_key` MUST NOT be an empty `KeyList`.<br/>
 * An `unpaused` token MAY be transferred or otherwise modified.
 * ### Block Stream Effects
 * None
 *
 * Generated from protobuf message <code>proto.TokenUnpauseTransactionBody</code>
 */
class TokenUnpauseTransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A token identifier.
     * <p>
     * The identified token SHALL be "unpaused". Subsequent transactions
     * involving that token MAY succeed.
     *
     * Generated from protobuf field <code>.proto.TokenID token = 1;</code>
     */
    protected $token = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\TokenID $token
     *          *
     *           A token identifier.
     *           <p>
     *           The identified token SHALL be "unpaused". Subsequent transactions
     *           involving that token MAY succeed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\TokenUnpause::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A token identifier.
     * <p>
     * The identified token SHALL be "unpaused". Subsequent transactions
     * involving that token MAY succeed.
     *
     * Generated from protobuf field <code>.proto.TokenID token = 1;</code>
     * @return \Proto\TokenID|null
     */
    public function getToken()
    {
        return $this->token;
    }

    public function hasToken()
    {
        return isset($this->token);
    }

    public function clearToken()
    {
        unset($this->token);
    }

    /**
     **
     * A token identifier.
     * <p>
     * The identified token SHALL be "unpaused". Subsequent transactions
     * involving that token MAY succeed.
     *
     * Generated from protobuf field <code>.proto.TokenID token = 1;</code>
     * @param \Proto\TokenID $var
     * @return $this
     */
    public function setToken($var)
    {
        GPBUtil::checkMessage($var, \Proto\TokenID::class);
        $this->token = $var;

        return $this;
    }

}

