<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: basic_types.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A number of _transferable units_ of a specified token.
 * The transferable unit of a token is its smallest denomination, as given by
 * the token's `decimals` property. Each minted token contains
 * 10<sup>`decimals`</sup> transferable units. For example, we could think of
 * the cent as the transferable unit of the US dollar (`decimals=2`); and the
 * tinybar as the transferable unit of HBAR (`decimals=8`).
 * Transferable units are not directly comparable across different tokens.
 *
 * Generated from protobuf message <code>proto.TokenBalance</code>
 */
class TokenBalance extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A token identifier.
     *
     * Generated from protobuf field <code>.proto.TokenID tokenId = 1;</code>
     */
    protected $tokenId = null;
    /**
     **
     * A number of transferable units of the identified token.
     * <p>
     * For fungible/common tokens this SHALL be the balance, in units of
     * 10<sup>`-decimals`</sup> whole tokens.<br/>
     * For non-fungible/unique tokens, this SHALL be the number of
     * individual unique tokens in this balance.
     *
     * Generated from protobuf field <code>uint64 balance = 2;</code>
     */
    protected $balance = 0;
    /**
     **
     * A number of "decimals" precision.
     * <p>
     * This MUST match the `decimals` value for the token identified by the
     * `tokenId` field.
     *
     * Generated from protobuf field <code>uint32 decimals = 3;</code>
     */
    protected $decimals = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\TokenID $tokenId
     *          *
     *           A token identifier.
     *     @type int|string $balance
     *          *
     *           A number of transferable units of the identified token.
     *           <p>
     *           For fungible/common tokens this SHALL be the balance, in units of
     *           10<sup>`-decimals`</sup> whole tokens.<br/>
     *           For non-fungible/unique tokens, this SHALL be the number of
     *           individual unique tokens in this balance.
     *     @type int $decimals
     *          *
     *           A number of "decimals" precision.
     *           <p>
     *           This MUST match the `decimals` value for the token identified by the
     *           `tokenId` field.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\BasicTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A token identifier.
     *
     * Generated from protobuf field <code>.proto.TokenID tokenId = 1;</code>
     * @return \Proto\TokenID|null
     */
    public function getTokenId()
    {
        return $this->tokenId;
    }

    public function hasTokenId()
    {
        return isset($this->tokenId);
    }

    public function clearTokenId()
    {
        unset($this->tokenId);
    }

    /**
     **
     * A token identifier.
     *
     * Generated from protobuf field <code>.proto.TokenID tokenId = 1;</code>
     * @param \Proto\TokenID $var
     * @return $this
     */
    public function setTokenId($var)
    {
        GPBUtil::checkMessage($var, \Proto\TokenID::class);
        $this->tokenId = $var;

        return $this;
    }

    /**
     **
     * A number of transferable units of the identified token.
     * <p>
     * For fungible/common tokens this SHALL be the balance, in units of
     * 10<sup>`-decimals`</sup> whole tokens.<br/>
     * For non-fungible/unique tokens, this SHALL be the number of
     * individual unique tokens in this balance.
     *
     * Generated from protobuf field <code>uint64 balance = 2;</code>
     * @return int|string
     */
    public function getBalance()
    {
        return $this->balance;
    }

    /**
     **
     * A number of transferable units of the identified token.
     * <p>
     * For fungible/common tokens this SHALL be the balance, in units of
     * 10<sup>`-decimals`</sup> whole tokens.<br/>
     * For non-fungible/unique tokens, this SHALL be the number of
     * individual unique tokens in this balance.
     *
     * Generated from protobuf field <code>uint64 balance = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBalance($var)
    {
        GPBUtil::checkUint64($var);
        $this->balance = $var;

        return $this;
    }

    /**
     **
     * A number of "decimals" precision.
     * <p>
     * This MUST match the `decimals` value for the token identified by the
     * `tokenId` field.
     *
     * Generated from protobuf field <code>uint32 decimals = 3;</code>
     * @return int
     */
    public function getDecimals()
    {
        return $this->decimals;
    }

    /**
     **
     * A number of "decimals" precision.
     * <p>
     * This MUST match the `decimals` value for the token identified by the
     * `tokenId` field.
     *
     * Generated from protobuf field <code>uint32 decimals = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setDecimals($var)
    {
        GPBUtil::checkUint32($var);
        $this->decimals = $var;

        return $this;
    }

}

