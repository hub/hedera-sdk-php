<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: throttle_definitions.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A single throttle limit applied to one or more operations.
 * The list of operations MUST contain at least one entry.<br/>
 * The throttle limit SHALL be specified in thousandths of an operation
 * per second; one operation per second for the network would be `1000`.<br/>
 * The throttle limit MUST be greater than zero (`0`).
 *
 * Generated from protobuf message <code>proto.ThrottleGroup</code>
 */
class ThrottleGroup extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A list of operations to be throttled.
     * <p>
     * This list MUST contain at least one item.<br/>
     * This list SHOULD NOT contain any item included in any other
     * active `ThrottleGroup`.
     *
     * Generated from protobuf field <code>repeated .proto.HederaFunctionality operations = 1;</code>
     */
    private $operations;
    /**
     **
     * A throttle limit for this group.<br/>
     * This is a total number of operations, in thousandths, the network may
     * perform each second for this group. Every node executes every transaction,
     * so this limit effectively applies individually to each node as well.<br/>
     * <p>
     * This value MUST be greater than zero (`0`).<br/>
     * This value SHOULD be less than `9,223,372`.<br/>
     *
     * Generated from protobuf field <code>uint64 milliOpsPerSec = 2;</code>
     */
    protected $milliOpsPerSec = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int[] $operations
     *          *
     *           A list of operations to be throttled.
     *           <p>
     *           This list MUST contain at least one item.<br/>
     *           This list SHOULD NOT contain any item included in any other
     *           active `ThrottleGroup`.
     *     @type int|string $milliOpsPerSec
     *          *
     *           A throttle limit for this group.<br/>
     *           This is a total number of operations, in thousandths, the network may
     *           perform each second for this group. Every node executes every transaction,
     *           so this limit effectively applies individually to each node as well.<br/>
     *           <p>
     *           This value MUST be greater than zero (`0`).<br/>
     *           This value SHOULD be less than `9,223,372`.<br/>
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ThrottleDefinitions::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A list of operations to be throttled.
     * <p>
     * This list MUST contain at least one item.<br/>
     * This list SHOULD NOT contain any item included in any other
     * active `ThrottleGroup`.
     *
     * Generated from protobuf field <code>repeated .proto.HederaFunctionality operations = 1;</code>
     * @return RepeatedField<int>
     */
    public function getOperations()
    {
        return $this->operations;
    }

    /**
     **
     * A list of operations to be throttled.
     * <p>
     * This list MUST contain at least one item.<br/>
     * This list SHOULD NOT contain any item included in any other
     * active `ThrottleGroup`.
     *
     * Generated from protobuf field <code>repeated .proto.HederaFunctionality operations = 1;</code>
     * @param int[] $var
     * @return $this
     */
    public function setOperations($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Proto\HederaFunctionality::class);
        $this->operations = $arr;

        return $this;
    }

    /**
     **
     * A throttle limit for this group.<br/>
     * This is a total number of operations, in thousandths, the network may
     * perform each second for this group. Every node executes every transaction,
     * so this limit effectively applies individually to each node as well.<br/>
     * <p>
     * This value MUST be greater than zero (`0`).<br/>
     * This value SHOULD be less than `9,223,372`.<br/>
     *
     * Generated from protobuf field <code>uint64 milliOpsPerSec = 2;</code>
     * @return int|string
     */
    public function getMilliOpsPerSec()
    {
        return $this->milliOpsPerSec;
    }

    /**
     **
     * A throttle limit for this group.<br/>
     * This is a total number of operations, in thousandths, the network may
     * perform each second for this group. Every node executes every transaction,
     * so this limit effectively applies individually to each node as well.<br/>
     * <p>
     * This value MUST be greater than zero (`0`).<br/>
     * This value SHOULD be less than `9,223,372`.<br/>
     *
     * Generated from protobuf field <code>uint64 milliOpsPerSec = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMilliOpsPerSec($var)
    {
        GPBUtil::checkUint64($var);
        $this->milliOpsPerSec = $var;

        return $this;
    }

}

