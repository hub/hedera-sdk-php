<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: basic_types.proto

namespace Proto;

use UnexpectedValueException;

/**
 **
 * Possible token freeze status values.
 * This is returned by `TokenGetInfoQuery` or `CryptoGetInfoResponse`
 * in `TokenRelationship`.
 *
 * Protobuf type <code>proto.TokenFreezeStatus</code>
 */
class TokenFreezeStatus
{
    /**
     **
     * The token does not support freeze or cannot be frozen for the designated
     * account.<br/>
     * Typically this indicates that the token does not have a `freeze_key` set.
     *
     * Generated from protobuf enum <code>FreezeNotApplicable = 0;</code>
     */
    const FreezeNotApplicable = 0;
    /**
     **
     * The token is currently frozen for the designated account.
     *
     * Generated from protobuf enum <code>Frozen = 1;</code>
     */
    const Frozen = 1;
    /**
     **
     * The token is not currently frozen for the designated account.
     *
     * Generated from protobuf enum <code>Unfrozen = 2;</code>
     */
    const Unfrozen = 2;

    private static $valueToName = [
        self::FreezeNotApplicable => 'FreezeNotApplicable',
        self::Frozen => 'Frozen',
        self::Unfrozen => 'Unfrozen',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

