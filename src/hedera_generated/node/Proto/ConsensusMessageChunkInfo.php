<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: consensus_submit_message.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Consensus message "chunk" detail.<br/>
 * This message carries information describing the way in which a message
 * submitted for consensus is broken into multiple fragments to fit within
 * network transaction size limits.
 * The use of multiple message fragments is RECOMMENDED for any message
 * greater than 4KiB in total size.
 * ### Block Stream Effects
 * None
 *
 * Generated from protobuf message <code>proto.ConsensusMessageChunkInfo</code>
 */
class ConsensusMessageChunkInfo extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * The TransactionID of the first chunk.
     * <p>
     * This MUST be set for every chunk in a fragmented message.
     *
     * Generated from protobuf field <code>.proto.TransactionID initialTransactionID = 1;</code>
     */
    protected $initialTransactionID = null;
    /**
     **
     * The total number of chunks in the message.
     *
     * Generated from protobuf field <code>int32 total = 2;</code>
     */
    protected $total = 0;
    /**
     **
     * The sequence number (from 1 to total) of the current chunk
     * in the message.
     *
     * Generated from protobuf field <code>int32 number = 3;</code>
     */
    protected $number = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\TransactionID $initialTransactionID
     *          *
     *           The TransactionID of the first chunk.
     *           <p>
     *           This MUST be set for every chunk in a fragmented message.
     *     @type int $total
     *          *
     *           The total number of chunks in the message.
     *     @type int $number
     *          *
     *           The sequence number (from 1 to total) of the current chunk
     *           in the message.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ConsensusSubmitMessage::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The TransactionID of the first chunk.
     * <p>
     * This MUST be set for every chunk in a fragmented message.
     *
     * Generated from protobuf field <code>.proto.TransactionID initialTransactionID = 1;</code>
     * @return \Proto\TransactionID|null
     */
    public function getInitialTransactionID()
    {
        return $this->initialTransactionID;
    }

    public function hasInitialTransactionID()
    {
        return isset($this->initialTransactionID);
    }

    public function clearInitialTransactionID()
    {
        unset($this->initialTransactionID);
    }

    /**
     **
     * The TransactionID of the first chunk.
     * <p>
     * This MUST be set for every chunk in a fragmented message.
     *
     * Generated from protobuf field <code>.proto.TransactionID initialTransactionID = 1;</code>
     * @param \Proto\TransactionID $var
     * @return $this
     */
    public function setInitialTransactionID($var)
    {
        GPBUtil::checkMessage($var, \Proto\TransactionID::class);
        $this->initialTransactionID = $var;

        return $this;
    }

    /**
     **
     * The total number of chunks in the message.
     *
     * Generated from protobuf field <code>int32 total = 2;</code>
     * @return int
     */
    public function getTotal()
    {
        return $this->total;
    }

    /**
     **
     * The total number of chunks in the message.
     *
     * Generated from protobuf field <code>int32 total = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTotal($var)
    {
        GPBUtil::checkInt32($var);
        $this->total = $var;

        return $this;
    }

    /**
     **
     * The sequence number (from 1 to total) of the current chunk
     * in the message.
     *
     * Generated from protobuf field <code>int32 number = 3;</code>
     * @return int
     */
    public function getNumber()
    {
        return $this->number;
    }

    /**
     **
     * The sequence number (from 1 to total) of the current chunk
     * in the message.
     *
     * Generated from protobuf field <code>int32 number = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->number = $var;

        return $this;
    }

}

