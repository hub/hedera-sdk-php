<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: file_update.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Update the metadata, and/or replace the content, of a file in the
 * Hedera File Service (HFS).
 * Any field which is not set (i.e. is null) in this message, other than
 * `fileID`, SHALL be ignored.<br/>
 * If the `keys` list for the identified file is an empty `KeyList`, then
 * this message MUST NOT set any field except `expirationTime`.
 * #### Signature Requirements
 * Every `Key` in the `keys` list for the identified file MUST sign this
 * transaction, if any field other than `expirationTime` is to be updated.<br/>
 * If the `keys` list for the identified file is an empty `KeyList` (because
 * this file was previously created or updated to have an empty `KeyList`),
 * then the file is considered immutable and this message MUST NOT set any
 * field except `expirationTime`.<br/>
 * See the [File Service](#FileService) specification for a detailed
 * explanation of the signature requirements for all file transactions.
 * ### Block Stream Effects
 * None
 *
 * Generated from protobuf message <code>proto.FileUpdateTransactionBody</code>
 */
class FileUpdateTransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A file identifier for the file to update.
     * <p>
     * This field is REQUIRED.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 1;</code>
     */
    protected $fileID = null;
    /**
     **
     * An expiration timestamp.
     * <p>
     * If set, this value MUST be strictly later than the existing
     * `expirationTime` value, or else it will be ignored.<br/>
     * If set, this value SHALL replace the existing `expirationTime`.<br/>
     * If this field is the only field set, then this transaction SHALL NOT
     * require any signature other than the `payer` for the transaction.<br/>
     * When the network consensus time exceeds the then-current
     * `expirationTime`, the network SHALL expire the file.
     *
     * Generated from protobuf field <code>.proto.Timestamp expirationTime = 2;</code>
     */
    protected $expirationTime = null;
    /**
     **
     * The new list of keys that "own" this file.
     * <p>
     * If set, every key in this `KeyList` MUST sign this transaction.<br/>
     * If set, every key in the _previous_ `KeyList` MUST _also_
     * sign this transaction.<br/>
     * If this value is an empty `KeyList`, then the file SHALL be immutable
     * after completion of this transaction.
     *
     * Generated from protobuf field <code>.proto.KeyList keys = 3;</code>
     */
    protected $keys = null;
    /**
     **
     * An array of bytes.
     * <p>
     * This value, if set, SHALL _replace_ the existing file content.
     * If this value is set to an empty byte array, the content of the file
     * SHALL be unchanged.
     *
     * Generated from protobuf field <code>bytes contents = 4;</code>
     */
    protected $contents = '';
    /**
     **
     * A short description of this file.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue memo = 5;</code>
     */
    protected $memo = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\FileID $fileID
     *          *
     *           A file identifier for the file to update.
     *           <p>
     *           This field is REQUIRED.
     *     @type \Proto\Timestamp $expirationTime
     *          *
     *           An expiration timestamp.
     *           <p>
     *           If set, this value MUST be strictly later than the existing
     *           `expirationTime` value, or else it will be ignored.<br/>
     *           If set, this value SHALL replace the existing `expirationTime`.<br/>
     *           If this field is the only field set, then this transaction SHALL NOT
     *           require any signature other than the `payer` for the transaction.<br/>
     *           When the network consensus time exceeds the then-current
     *           `expirationTime`, the network SHALL expire the file.
     *     @type \Proto\KeyList $keys
     *          *
     *           The new list of keys that "own" this file.
     *           <p>
     *           If set, every key in this `KeyList` MUST sign this transaction.<br/>
     *           If set, every key in the _previous_ `KeyList` MUST _also_
     *           sign this transaction.<br/>
     *           If this value is an empty `KeyList`, then the file SHALL be immutable
     *           after completion of this transaction.
     *     @type string $contents
     *          *
     *           An array of bytes.
     *           <p>
     *           This value, if set, SHALL _replace_ the existing file content.
     *           If this value is set to an empty byte array, the content of the file
     *           SHALL be unchanged.
     *     @type \Google\Protobuf\StringValue $memo
     *          *
     *           A short description of this file.
     *           <p>
     *           This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     *           (default 100) bytes when encoded as UTF-8.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\FileUpdate::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A file identifier for the file to update.
     * <p>
     * This field is REQUIRED.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 1;</code>
     * @return \Proto\FileID|null
     */
    public function getFileID()
    {
        return $this->fileID;
    }

    public function hasFileID()
    {
        return isset($this->fileID);
    }

    public function clearFileID()
    {
        unset($this->fileID);
    }

    /**
     **
     * A file identifier for the file to update.
     * <p>
     * This field is REQUIRED.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 1;</code>
     * @param \Proto\FileID $var
     * @return $this
     */
    public function setFileID($var)
    {
        GPBUtil::checkMessage($var, \Proto\FileID::class);
        $this->fileID = $var;

        return $this;
    }

    /**
     **
     * An expiration timestamp.
     * <p>
     * If set, this value MUST be strictly later than the existing
     * `expirationTime` value, or else it will be ignored.<br/>
     * If set, this value SHALL replace the existing `expirationTime`.<br/>
     * If this field is the only field set, then this transaction SHALL NOT
     * require any signature other than the `payer` for the transaction.<br/>
     * When the network consensus time exceeds the then-current
     * `expirationTime`, the network SHALL expire the file.
     *
     * Generated from protobuf field <code>.proto.Timestamp expirationTime = 2;</code>
     * @return \Proto\Timestamp|null
     */
    public function getExpirationTime()
    {
        return $this->expirationTime;
    }

    public function hasExpirationTime()
    {
        return isset($this->expirationTime);
    }

    public function clearExpirationTime()
    {
        unset($this->expirationTime);
    }

    /**
     **
     * An expiration timestamp.
     * <p>
     * If set, this value MUST be strictly later than the existing
     * `expirationTime` value, or else it will be ignored.<br/>
     * If set, this value SHALL replace the existing `expirationTime`.<br/>
     * If this field is the only field set, then this transaction SHALL NOT
     * require any signature other than the `payer` for the transaction.<br/>
     * When the network consensus time exceeds the then-current
     * `expirationTime`, the network SHALL expire the file.
     *
     * Generated from protobuf field <code>.proto.Timestamp expirationTime = 2;</code>
     * @param \Proto\Timestamp $var
     * @return $this
     */
    public function setExpirationTime($var)
    {
        GPBUtil::checkMessage($var, \Proto\Timestamp::class);
        $this->expirationTime = $var;

        return $this;
    }

    /**
     **
     * The new list of keys that "own" this file.
     * <p>
     * If set, every key in this `KeyList` MUST sign this transaction.<br/>
     * If set, every key in the _previous_ `KeyList` MUST _also_
     * sign this transaction.<br/>
     * If this value is an empty `KeyList`, then the file SHALL be immutable
     * after completion of this transaction.
     *
     * Generated from protobuf field <code>.proto.KeyList keys = 3;</code>
     * @return \Proto\KeyList|null
     */
    public function getKeys()
    {
        return $this->keys;
    }

    public function hasKeys()
    {
        return isset($this->keys);
    }

    public function clearKeys()
    {
        unset($this->keys);
    }

    /**
     **
     * The new list of keys that "own" this file.
     * <p>
     * If set, every key in this `KeyList` MUST sign this transaction.<br/>
     * If set, every key in the _previous_ `KeyList` MUST _also_
     * sign this transaction.<br/>
     * If this value is an empty `KeyList`, then the file SHALL be immutable
     * after completion of this transaction.
     *
     * Generated from protobuf field <code>.proto.KeyList keys = 3;</code>
     * @param \Proto\KeyList $var
     * @return $this
     */
    public function setKeys($var)
    {
        GPBUtil::checkMessage($var, \Proto\KeyList::class);
        $this->keys = $var;

        return $this;
    }

    /**
     **
     * An array of bytes.
     * <p>
     * This value, if set, SHALL _replace_ the existing file content.
     * If this value is set to an empty byte array, the content of the file
     * SHALL be unchanged.
     *
     * Generated from protobuf field <code>bytes contents = 4;</code>
     * @return string
     */
    public function getContents()
    {
        return $this->contents;
    }

    /**
     **
     * An array of bytes.
     * <p>
     * This value, if set, SHALL _replace_ the existing file content.
     * If this value is set to an empty byte array, the content of the file
     * SHALL be unchanged.
     *
     * Generated from protobuf field <code>bytes contents = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setContents($var)
    {
        GPBUtil::checkString($var, False);
        $this->contents = $var;

        return $this;
    }

    /**
     **
     * A short description of this file.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue memo = 5;</code>
     * @return \Google\Protobuf\StringValue|null
     */
    public function getMemo()
    {
        return $this->memo;
    }

    public function hasMemo()
    {
        return isset($this->memo);
    }

    public function clearMemo()
    {
        unset($this->memo);
    }

    /**
     * Returns the unboxed value from <code>getMemo()</code>

     **
     * A short description of this file.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue memo = 5;</code>
     * @return string|null
     */
    public function getMemoUnwrapped()
    {
        return $this->readWrapperValue("memo");
    }

    /**
     **
     * A short description of this file.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue memo = 5;</code>
     * @param \Google\Protobuf\StringValue $var
     * @return $this
     */
    public function setMemo($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\StringValue::class);
        $this->memo = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\StringValue object.

     **
     * A short description of this file.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue memo = 5;</code>
     * @param string|null $var
     * @return $this
     */
    public function setMemoUnwrapped($var)
    {
        $this->writeWrapperValue("memo", $var);
        return $this;}

}

