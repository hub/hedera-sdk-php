<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: basic_types.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A single pending airdrop value.
 * This message SHALL record the airdrop amount for a
 * fungible/common token.<br/>
 * This message SHOULD be null for a non-fungible/unique token.<br/>
 * If a non-null `PendingAirdropValue` is set for a non-fungible/unique
 * token, the amount field MUST be `0`.
 * It is RECOMMENDED that implementations store pending airdrop information
 * as a key-value map from `PendingAirdropId` to `PendingAirdropValue`, with
 * a `null` value used for non-fungible pending airdrops.
 *
 * Generated from protobuf message <code>proto.PendingAirdropValue</code>
 */
class PendingAirdropValue extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * An amount to transfer for fungible/common tokens.<br/>
     * This is expressed in the smallest available units for that token
     * (i.e. 10<sup>-`decimals`</sup> whole tokens).
     * <p>
     * This amount SHALL be transferred from the sender to the receiver,
     * if claimed.<br/>
     * If the token is a fungible/common token, this value MUST be strictly
     * greater than `0`.<br/>
     * If the token is a non-fungible/unique token, this message SHOULD NOT
     * be set, and if set, this field MUST be `0`.
     *
     * Generated from protobuf field <code>uint64 amount = 1;</code>
     */
    protected $amount = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $amount
     *          *
     *           An amount to transfer for fungible/common tokens.<br/>
     *           This is expressed in the smallest available units for that token
     *           (i.e. 10<sup>-`decimals`</sup> whole tokens).
     *           <p>
     *           This amount SHALL be transferred from the sender to the receiver,
     *           if claimed.<br/>
     *           If the token is a fungible/common token, this value MUST be strictly
     *           greater than `0`.<br/>
     *           If the token is a non-fungible/unique token, this message SHOULD NOT
     *           be set, and if set, this field MUST be `0`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\BasicTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * An amount to transfer for fungible/common tokens.<br/>
     * This is expressed in the smallest available units for that token
     * (i.e. 10<sup>-`decimals`</sup> whole tokens).
     * <p>
     * This amount SHALL be transferred from the sender to the receiver,
     * if claimed.<br/>
     * If the token is a fungible/common token, this value MUST be strictly
     * greater than `0`.<br/>
     * If the token is a non-fungible/unique token, this message SHOULD NOT
     * be set, and if set, this field MUST be `0`.
     *
     * Generated from protobuf field <code>uint64 amount = 1;</code>
     * @return int|string
     */
    public function getAmount()
    {
        return $this->amount;
    }

    /**
     **
     * An amount to transfer for fungible/common tokens.<br/>
     * This is expressed in the smallest available units for that token
     * (i.e. 10<sup>-`decimals`</sup> whole tokens).
     * <p>
     * This amount SHALL be transferred from the sender to the receiver,
     * if claimed.<br/>
     * If the token is a fungible/common token, this value MUST be strictly
     * greater than `0`.<br/>
     * If the token is a non-fungible/unique token, this message SHOULD NOT
     * be set, and if set, this field MUST be `0`.
     *
     * Generated from protobuf field <code>uint64 amount = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAmount($var)
    {
        GPBUtil::checkUint64($var);
        $this->amount = $var;

        return $this;
    }

}

