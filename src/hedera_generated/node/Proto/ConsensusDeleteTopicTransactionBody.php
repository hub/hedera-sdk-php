<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: consensus_delete_topic.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Delete a topic.
 * Once deleted, subsequent transactions or queries for that topic SHALL NOT
 * succeed.<br/>
 * If adminKey is set on the topic, this transaction MUST be signed by that
 * key.<br/>
 * If adminKey is not set on the topic, this transaction SHALL fail with a
 * response code of `UNAUTHORIZED`. A topic without an adminKey cannot be
 * deleted (but MAY expire).
 * ### Block Stream Effects
 * None
 *
 * Generated from protobuf message <code>proto.ConsensusDeleteTopicTransactionBody</code>
 */
class ConsensusDeleteTopicTransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * Topic to be deleted.
     *
     * Generated from protobuf field <code>.proto.TopicID topicID = 1;</code>
     */
    protected $topicID = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\TopicID $topicID
     *          *
     *           Topic to be deleted.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ConsensusDeleteTopic::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * Topic to be deleted.
     *
     * Generated from protobuf field <code>.proto.TopicID topicID = 1;</code>
     * @return \Proto\TopicID|null
     */
    public function getTopicID()
    {
        return $this->topicID;
    }

    public function hasTopicID()
    {
        return isset($this->topicID);
    }

    public function clearTopicID()
    {
        unset($this->topicID);
    }

    /**
     **
     * Topic to be deleted.
     *
     * Generated from protobuf field <code>.proto.TopicID topicID = 1;</code>
     * @param \Proto\TopicID $var
     * @return $this
     */
    public function setTopicID($var)
    {
        GPBUtil::checkMessage($var, \Proto\TopicID::class);
        $this->topicID = $var;

        return $this;
    }

}

