<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: basic_types.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A total fee, in component amounts charged for a transaction.
 * Total fees are composed of three sets of components.
 * - Node data, components that compensate the specific node that submitted
 *   the transaction.
 * - Network data, components that compensate the Hedera network for gossiping
 *   the transaction and determining the consensus timestamp.
 * - Service data, components that compensate the Hedera network for the ongoing
 *   maintenance and operation of the network, as well as ongoing development
 *   of network services.
 * Fee components are recorded in thousandths of a tiny cent, and the network
 * exchange rate converts these to tinybar amounts, which are what the network
 * charges for transactions and what the network reports in the record stream.
 *
 * Generated from protobuf message <code>proto.FeeData</code>
 */
class FeeData extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * Fee components to be paid to the submitting node.
     *
     * Generated from protobuf field <code>.proto.FeeComponents nodedata = 1;</code>
     */
    protected $nodedata = null;
    /**
     **
     * Fee components to be paid to the network for bringing a
     * transaction to consensus.
     *
     * Generated from protobuf field <code>.proto.FeeComponents networkdata = 2;</code>
     */
    protected $networkdata = null;
    /**
     **
     * Fee components to be paid to the network for providing the immediate and
     * ongoing services associated with executing the transaction, maintaining
     * the network, and developing the network software.
     *
     * Generated from protobuf field <code>.proto.FeeComponents servicedata = 3;</code>
     */
    protected $servicedata = null;
    /**
     **
     * A sub-type distinguishing between different types of `FeeData` that may
     * apply to the same base transaction type (associated with
     * an `HederaFunctionality`).
     *
     * Generated from protobuf field <code>.proto.SubType subType = 4;</code>
     */
    protected $subType = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\FeeComponents $nodedata
     *          *
     *           Fee components to be paid to the submitting node.
     *     @type \Proto\FeeComponents $networkdata
     *          *
     *           Fee components to be paid to the network for bringing a
     *           transaction to consensus.
     *     @type \Proto\FeeComponents $servicedata
     *          *
     *           Fee components to be paid to the network for providing the immediate and
     *           ongoing services associated with executing the transaction, maintaining
     *           the network, and developing the network software.
     *     @type int $subType
     *          *
     *           A sub-type distinguishing between different types of `FeeData` that may
     *           apply to the same base transaction type (associated with
     *           an `HederaFunctionality`).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\BasicTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * Fee components to be paid to the submitting node.
     *
     * Generated from protobuf field <code>.proto.FeeComponents nodedata = 1;</code>
     * @return \Proto\FeeComponents|null
     */
    public function getNodedata()
    {
        return $this->nodedata;
    }

    public function hasNodedata()
    {
        return isset($this->nodedata);
    }

    public function clearNodedata()
    {
        unset($this->nodedata);
    }

    /**
     **
     * Fee components to be paid to the submitting node.
     *
     * Generated from protobuf field <code>.proto.FeeComponents nodedata = 1;</code>
     * @param \Proto\FeeComponents $var
     * @return $this
     */
    public function setNodedata($var)
    {
        GPBUtil::checkMessage($var, \Proto\FeeComponents::class);
        $this->nodedata = $var;

        return $this;
    }

    /**
     **
     * Fee components to be paid to the network for bringing a
     * transaction to consensus.
     *
     * Generated from protobuf field <code>.proto.FeeComponents networkdata = 2;</code>
     * @return \Proto\FeeComponents|null
     */
    public function getNetworkdata()
    {
        return $this->networkdata;
    }

    public function hasNetworkdata()
    {
        return isset($this->networkdata);
    }

    public function clearNetworkdata()
    {
        unset($this->networkdata);
    }

    /**
     **
     * Fee components to be paid to the network for bringing a
     * transaction to consensus.
     *
     * Generated from protobuf field <code>.proto.FeeComponents networkdata = 2;</code>
     * @param \Proto\FeeComponents $var
     * @return $this
     */
    public function setNetworkdata($var)
    {
        GPBUtil::checkMessage($var, \Proto\FeeComponents::class);
        $this->networkdata = $var;

        return $this;
    }

    /**
     **
     * Fee components to be paid to the network for providing the immediate and
     * ongoing services associated with executing the transaction, maintaining
     * the network, and developing the network software.
     *
     * Generated from protobuf field <code>.proto.FeeComponents servicedata = 3;</code>
     * @return \Proto\FeeComponents|null
     */
    public function getServicedata()
    {
        return $this->servicedata;
    }

    public function hasServicedata()
    {
        return isset($this->servicedata);
    }

    public function clearServicedata()
    {
        unset($this->servicedata);
    }

    /**
     **
     * Fee components to be paid to the network for providing the immediate and
     * ongoing services associated with executing the transaction, maintaining
     * the network, and developing the network software.
     *
     * Generated from protobuf field <code>.proto.FeeComponents servicedata = 3;</code>
     * @param \Proto\FeeComponents $var
     * @return $this
     */
    public function setServicedata($var)
    {
        GPBUtil::checkMessage($var, \Proto\FeeComponents::class);
        $this->servicedata = $var;

        return $this;
    }

    /**
     **
     * A sub-type distinguishing between different types of `FeeData` that may
     * apply to the same base transaction type (associated with
     * an `HederaFunctionality`).
     *
     * Generated from protobuf field <code>.proto.SubType subType = 4;</code>
     * @return int
     */
    public function getSubType()
    {
        return $this->subType;
    }

    /**
     **
     * A sub-type distinguishing between different types of `FeeData` that may
     * apply to the same base transaction type (associated with
     * an `HederaFunctionality`).
     *
     * Generated from protobuf field <code>.proto.SubType subType = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setSubType($var)
    {
        GPBUtil::checkEnum($var, \Proto\SubType::class);
        $this->subType = $var;

        return $this;
    }

}

