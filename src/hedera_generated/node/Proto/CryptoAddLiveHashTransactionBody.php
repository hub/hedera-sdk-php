<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: crypto_add_live_hash.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Add a hash value to the ledger and associate it with an account.
 * Create an entry in the ledger for a SHA-384 hash of some content, and
 * associate that with a specific account.  This is sometimes used to associate
 * a credential or certificate with an account as a public record.<br/>
 * The entry created is also associated with a list of keys, all of which
 * MUST sign this transaction.<br/>
 * The account key for the associated account MUST sign this transaction.<br/>
 * The live hash, once created, MAY be removed from the ledger with one
 * or more signatures.
 * - The account key of the account associated to the live hash.
 * - Any one key from the key list in the live hash entry.
 * - Any combination of keys from the key list in the live hash entry.
 *
 * Generated from protobuf message <code>proto.CryptoAddLiveHashTransactionBody</code>
 */
class CryptoAddLiveHashTransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A Live Hash to be added to the ledger and associated with
     * the identified account.
     *
     * Generated from protobuf field <code>.proto.LiveHash liveHash = 3;</code>
     */
    protected $liveHash = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\LiveHash $liveHash
     *          *
     *           A Live Hash to be added to the ledger and associated with
     *           the identified account.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\CryptoAddLiveHash::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A Live Hash to be added to the ledger and associated with
     * the identified account.
     *
     * Generated from protobuf field <code>.proto.LiveHash liveHash = 3;</code>
     * @return \Proto\LiveHash|null
     */
    public function getLiveHash()
    {
        return $this->liveHash;
    }

    public function hasLiveHash()
    {
        return isset($this->liveHash);
    }

    public function clearLiveHash()
    {
        unset($this->liveHash);
    }

    /**
     **
     * A Live Hash to be added to the ledger and associated with
     * the identified account.
     *
     * Generated from protobuf field <code>.proto.LiveHash liveHash = 3;</code>
     * @param \Proto\LiveHash $var
     * @return $this
     */
    public function setLiveHash($var)
    {
        GPBUtil::checkMessage($var, \Proto\LiveHash::class);
        $this->liveHash = $var;

        return $this;
    }

}

