<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: basic_types.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * This message is deprecated and MUST NOT be used to communicate with network
 * nodes. It is retained here only for historical reasons.
 * Client software MUST NOT include this message in any request. <br/>
 * Compliant nodes SHALL NOT accept any request containing this message.
 * Please use the `SignaturePair` and `SignatureMap` messages instead of
 * this message.
 *
 * @deprecated
 * Generated from protobuf message <code>proto.SignatureList</code>
 */
class SignatureList extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * Each signature corresponds to a Key in the KeyList.
     *
     * Generated from protobuf field <code>repeated .proto.Signature sigs = 2;</code>
     */
    private $sigs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\Signature[] $sigs
     *          *
     *           Each signature corresponds to a Key in the KeyList.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\BasicTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * Each signature corresponds to a Key in the KeyList.
     *
     * Generated from protobuf field <code>repeated .proto.Signature sigs = 2;</code>
     * @return RepeatedField<\Proto\Signature>
     */
    public function getSigs()
    {
        return $this->sigs;
    }

    /**
     **
     * Each signature corresponds to a Key in the KeyList.
     *
     * Generated from protobuf field <code>repeated .proto.Signature sigs = 2;</code>
     * @param \Proto\Signature[] $var
     * @return $this
     */
    public function setSigs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Proto\Signature::class);
        $this->sigs = $arr;

        return $this;
    }

}

