<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: schedule_delete.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Mark a schedule in the network state as deleted.
 * This transaction MUST be signed by the `adminKey` for the
 * identified schedule.<br/>
 * If a schedule does not have `adminKey` set or if `adminKey` is an empty
 * `KeyList`, that schedule SHALL be immutable and MUST NOT be deleted.<br/>
 * A deleted schedule SHALL not be executed.<br/>
 * A deleted schedule MUST NOT be the subject of a subsequent
 * `scheduleSign` transaction.
 * ### Block Stream Effects
 * None
 *
 * Generated from protobuf message <code>proto.ScheduleDeleteTransactionBody</code>
 */
class ScheduleDeleteTransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A schedule identifier.
     * <p>
     * This MUST identify the schedule which SHALL be deleted.
     *
     * Generated from protobuf field <code>.proto.ScheduleID scheduleID = 1;</code>
     */
    protected $scheduleID = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\ScheduleID $scheduleID
     *          *
     *           A schedule identifier.
     *           <p>
     *           This MUST identify the schedule which SHALL be deleted.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ScheduleDelete::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A schedule identifier.
     * <p>
     * This MUST identify the schedule which SHALL be deleted.
     *
     * Generated from protobuf field <code>.proto.ScheduleID scheduleID = 1;</code>
     * @return \Proto\ScheduleID|null
     */
    public function getScheduleID()
    {
        return $this->scheduleID;
    }

    public function hasScheduleID()
    {
        return isset($this->scheduleID);
    }

    public function clearScheduleID()
    {
        unset($this->scheduleID);
    }

    /**
     **
     * A schedule identifier.
     * <p>
     * This MUST identify the schedule which SHALL be deleted.
     *
     * Generated from protobuf field <code>.proto.ScheduleID scheduleID = 1;</code>
     * @param \Proto\ScheduleID $var
     * @return $this
     */
    public function setScheduleID($var)
    {
        GPBUtil::checkMessage($var, \Proto\ScheduleID::class);
        $this->scheduleID = $var;

        return $this;
    }

}

