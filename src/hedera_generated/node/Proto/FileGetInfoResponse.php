<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: file_get_info.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A response to a query for the metadata of a file in the HFS.
 *
 * Generated from protobuf message <code>proto.FileGetInfoResponse</code>
 */
class FileGetInfoResponse extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.ResponseHeader header = 1;</code>
     */
    protected $header = null;
    /**
     **
     * A combination of fields from the requested file metadata.
     * <p>
     * This SHALL NOT be set if the identified file does not exist
     * or has expired.
     *
     * Generated from protobuf field <code>.proto.FileGetInfoResponse.FileInfo fileInfo = 2;</code>
     */
    protected $fileInfo = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\ResponseHeader $header
     *          *
     *           The standard response information for queries.<br/>
     *           This includes the values requested in the `QueryHeader`
     *           (cost, state proof, both, or neither).
     *     @type \Proto\FileGetInfoResponse\FileInfo $fileInfo
     *          *
     *           A combination of fields from the requested file metadata.
     *           <p>
     *           This SHALL NOT be set if the identified file does not exist
     *           or has expired.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\FileGetInfo::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.ResponseHeader header = 1;</code>
     * @return \Proto\ResponseHeader|null
     */
    public function getHeader()
    {
        return $this->header;
    }

    public function hasHeader()
    {
        return isset($this->header);
    }

    public function clearHeader()
    {
        unset($this->header);
    }

    /**
     **
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.ResponseHeader header = 1;</code>
     * @param \Proto\ResponseHeader $var
     * @return $this
     */
    public function setHeader($var)
    {
        GPBUtil::checkMessage($var, \Proto\ResponseHeader::class);
        $this->header = $var;

        return $this;
    }

    /**
     **
     * A combination of fields from the requested file metadata.
     * <p>
     * This SHALL NOT be set if the identified file does not exist
     * or has expired.
     *
     * Generated from protobuf field <code>.proto.FileGetInfoResponse.FileInfo fileInfo = 2;</code>
     * @return \Proto\FileGetInfoResponse\FileInfo|null
     */
    public function getFileInfo()
    {
        return $this->fileInfo;
    }

    public function hasFileInfo()
    {
        return isset($this->fileInfo);
    }

    public function clearFileInfo()
    {
        unset($this->fileInfo);
    }

    /**
     **
     * A combination of fields from the requested file metadata.
     * <p>
     * This SHALL NOT be set if the identified file does not exist
     * or has expired.
     *
     * Generated from protobuf field <code>.proto.FileGetInfoResponse.FileInfo fileInfo = 2;</code>
     * @param \Proto\FileGetInfoResponse\FileInfo $var
     * @return $this
     */
    public function setFileInfo($var)
    {
        GPBUtil::checkMessage($var, \Proto\FileGetInfoResponse\FileInfo::class);
        $this->fileInfo = $var;

        return $this;
    }

}

