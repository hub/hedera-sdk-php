<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: get_by_solidity_id.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Response to a getBySolidityId query.
 * This message returns the account, contract, and file identifiers for
 * a smart contract.
 *
 * @deprecated
 * Generated from protobuf message <code>proto.GetBySolidityIDResponse</code>
 */
class GetBySolidityIDResponse extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.ResponseHeader header = 1;</code>
     */
    protected $header = null;
    /**
     **
     * An account identifier.
     * <p>
     * This SHALL identify an account that backs the requested smart contract.
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 2;</code>
     */
    protected $accountID = null;
    /**
     **
     * A file identifier.
     * <p>
     * This SHALL identify a file, the contents of which are the EVM
     * bytecode for the requested smart contract.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 3;</code>
     */
    protected $fileID = null;
    /**
     **
     * A contract identifier.
     * <p>
     * This SHALL identify the requested smart contract.
     *
     * Generated from protobuf field <code>.proto.ContractID contractID = 4;</code>
     */
    protected $contractID = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\ResponseHeader $header
     *          *
     *           The standard response information for queries.<br/>
     *           This includes the values requested in the `QueryHeader`
     *           (cost, state proof, both, or neither).
     *     @type \Proto\AccountID $accountID
     *          *
     *           An account identifier.
     *           <p>
     *           This SHALL identify an account that backs the requested smart contract.
     *     @type \Proto\FileID $fileID
     *          *
     *           A file identifier.
     *           <p>
     *           This SHALL identify a file, the contents of which are the EVM
     *           bytecode for the requested smart contract.
     *     @type \Proto\ContractID $contractID
     *          *
     *           A contract identifier.
     *           <p>
     *           This SHALL identify the requested smart contract.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GetBySolidityId::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.ResponseHeader header = 1;</code>
     * @return \Proto\ResponseHeader|null
     */
    public function getHeader()
    {
        return $this->header;
    }

    public function hasHeader()
    {
        return isset($this->header);
    }

    public function clearHeader()
    {
        unset($this->header);
    }

    /**
     **
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.ResponseHeader header = 1;</code>
     * @param \Proto\ResponseHeader $var
     * @return $this
     */
    public function setHeader($var)
    {
        GPBUtil::checkMessage($var, \Proto\ResponseHeader::class);
        $this->header = $var;

        return $this;
    }

    /**
     **
     * An account identifier.
     * <p>
     * This SHALL identify an account that backs the requested smart contract.
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 2;</code>
     * @return \Proto\AccountID|null
     */
    public function getAccountID()
    {
        return $this->accountID;
    }

    public function hasAccountID()
    {
        return isset($this->accountID);
    }

    public function clearAccountID()
    {
        unset($this->accountID);
    }

    /**
     **
     * An account identifier.
     * <p>
     * This SHALL identify an account that backs the requested smart contract.
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 2;</code>
     * @param \Proto\AccountID $var
     * @return $this
     */
    public function setAccountID($var)
    {
        GPBUtil::checkMessage($var, \Proto\AccountID::class);
        $this->accountID = $var;

        return $this;
    }

    /**
     **
     * A file identifier.
     * <p>
     * This SHALL identify a file, the contents of which are the EVM
     * bytecode for the requested smart contract.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 3;</code>
     * @return \Proto\FileID|null
     */
    public function getFileID()
    {
        return $this->fileID;
    }

    public function hasFileID()
    {
        return isset($this->fileID);
    }

    public function clearFileID()
    {
        unset($this->fileID);
    }

    /**
     **
     * A file identifier.
     * <p>
     * This SHALL identify a file, the contents of which are the EVM
     * bytecode for the requested smart contract.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 3;</code>
     * @param \Proto\FileID $var
     * @return $this
     */
    public function setFileID($var)
    {
        GPBUtil::checkMessage($var, \Proto\FileID::class);
        $this->fileID = $var;

        return $this;
    }

    /**
     **
     * A contract identifier.
     * <p>
     * This SHALL identify the requested smart contract.
     *
     * Generated from protobuf field <code>.proto.ContractID contractID = 4;</code>
     * @return \Proto\ContractID|null
     */
    public function getContractID()
    {
        return $this->contractID;
    }

    public function hasContractID()
    {
        return isset($this->contractID);
    }

    public function clearContractID()
    {
        unset($this->contractID);
    }

    /**
     **
     * A contract identifier.
     * <p>
     * This SHALL identify the requested smart contract.
     *
     * Generated from protobuf field <code>.proto.ContractID contractID = 4;</code>
     * @param \Proto\ContractID $var
     * @return $this
     */
    public function setContractID($var)
    {
        GPBUtil::checkMessage($var, \Proto\ContractID::class);
        $this->contractID = $var;

        return $this;
    }

}

