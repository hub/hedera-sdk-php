<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: crypto_get_account_records.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Return records of all "recent" transactions for which the specified
 * account is the effective payer.
 *
 * Generated from protobuf message <code>proto.CryptoGetAccountRecordsResponse</code>
 */
class CryptoGetAccountRecordsResponse extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.ResponseHeader header = 1;</code>
     */
    protected $header = null;
    /**
     **
     * An account identifier.<br/>
     * This identifies the account used when filtering the
     * transaction record lists.
     * <p>
     * This field SHALL match the requested account identifier.
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 2;</code>
     */
    protected $accountID = null;
    /**
     **
     * A list of records.
     * <p>
     * This list SHALL contain all available and "recent" records in which
     * the account identified in the `accountID` field acted as effective payer.
     *
     * Generated from protobuf field <code>repeated .proto.TransactionRecord records = 3;</code>
     */
    private $records;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\ResponseHeader $header
     *          *
     *           The standard response information for queries.<br/>
     *           This includes the values requested in the `QueryHeader`
     *           (cost, state proof, both, or neither).
     *     @type \Proto\AccountID $accountID
     *          *
     *           An account identifier.<br/>
     *           This identifies the account used when filtering the
     *           transaction record lists.
     *           <p>
     *           This field SHALL match the requested account identifier.
     *     @type \Proto\TransactionRecord[] $records
     *          *
     *           A list of records.
     *           <p>
     *           This list SHALL contain all available and "recent" records in which
     *           the account identified in the `accountID` field acted as effective payer.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\CryptoGetAccountRecords::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.ResponseHeader header = 1;</code>
     * @return \Proto\ResponseHeader|null
     */
    public function getHeader()
    {
        return $this->header;
    }

    public function hasHeader()
    {
        return isset($this->header);
    }

    public function clearHeader()
    {
        unset($this->header);
    }

    /**
     **
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.ResponseHeader header = 1;</code>
     * @param \Proto\ResponseHeader $var
     * @return $this
     */
    public function setHeader($var)
    {
        GPBUtil::checkMessage($var, \Proto\ResponseHeader::class);
        $this->header = $var;

        return $this;
    }

    /**
     **
     * An account identifier.<br/>
     * This identifies the account used when filtering the
     * transaction record lists.
     * <p>
     * This field SHALL match the requested account identifier.
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 2;</code>
     * @return \Proto\AccountID|null
     */
    public function getAccountID()
    {
        return $this->accountID;
    }

    public function hasAccountID()
    {
        return isset($this->accountID);
    }

    public function clearAccountID()
    {
        unset($this->accountID);
    }

    /**
     **
     * An account identifier.<br/>
     * This identifies the account used when filtering the
     * transaction record lists.
     * <p>
     * This field SHALL match the requested account identifier.
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 2;</code>
     * @param \Proto\AccountID $var
     * @return $this
     */
    public function setAccountID($var)
    {
        GPBUtil::checkMessage($var, \Proto\AccountID::class);
        $this->accountID = $var;

        return $this;
    }

    /**
     **
     * A list of records.
     * <p>
     * This list SHALL contain all available and "recent" records in which
     * the account identified in the `accountID` field acted as effective payer.
     *
     * Generated from protobuf field <code>repeated .proto.TransactionRecord records = 3;</code>
     * @return RepeatedField<\Proto\TransactionRecord>
     */
    public function getRecords()
    {
        return $this->records;
    }

    /**
     **
     * A list of records.
     * <p>
     * This list SHALL contain all available and "recent" records in which
     * the account identified in the `accountID` field acted as effective payer.
     *
     * Generated from protobuf field <code>repeated .proto.TransactionRecord records = 3;</code>
     * @param \Proto\TransactionRecord[] $var
     * @return $this
     */
    public function setRecords($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Proto\TransactionRecord::class);
        $this->records = $arr;

        return $this;
    }

}

