<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: contract_types.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * A contract "nonce" reference.<br/>
 * This connects a contract and its "nonce" value, and is primarily for use in
 * query responses.  A "nonce" is short for "nonsense" and is usually a value
 * with no particular meaning.
 * The nonce of a contract SHALL be incremented when that contract creates
 * another contract.
 *
 * Generated from protobuf message <code>proto.ContractNonceInfo</code>
 */
class ContractNonceInfo extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A contract identifier.<br/>
     * This refers to the contract that holds this nonce value.
     *
     * Generated from protobuf field <code>.proto.ContractID contract_id = 1;</code>
     */
    protected $contract_id = null;
    /**
     **
     * A "nonce" value.
     * The current value of the nonce associated with the identified contract.
     *
     * Generated from protobuf field <code>int64 nonce = 2;</code>
     */
    protected $nonce = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\ContractID $contract_id
     *          *
     *           A contract identifier.<br/>
     *           This refers to the contract that holds this nonce value.
     *     @type int|string $nonce
     *          *
     *           A "nonce" value.
     *           The current value of the nonce associated with the identified contract.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ContractTypes::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A contract identifier.<br/>
     * This refers to the contract that holds this nonce value.
     *
     * Generated from protobuf field <code>.proto.ContractID contract_id = 1;</code>
     * @return \Proto\ContractID|null
     */
    public function getContractId()
    {
        return $this->contract_id;
    }

    public function hasContractId()
    {
        return isset($this->contract_id);
    }

    public function clearContractId()
    {
        unset($this->contract_id);
    }

    /**
     **
     * A contract identifier.<br/>
     * This refers to the contract that holds this nonce value.
     *
     * Generated from protobuf field <code>.proto.ContractID contract_id = 1;</code>
     * @param \Proto\ContractID $var
     * @return $this
     */
    public function setContractId($var)
    {
        GPBUtil::checkMessage($var, \Proto\ContractID::class);
        $this->contract_id = $var;

        return $this;
    }

    /**
     **
     * A "nonce" value.
     * The current value of the nonce associated with the identified contract.
     *
     * Generated from protobuf field <code>int64 nonce = 2;</code>
     * @return int|string
     */
    public function getNonce()
    {
        return $this->nonce;
    }

    /**
     **
     * A "nonce" value.
     * The current value of the nonce associated with the identified contract.
     *
     * Generated from protobuf field <code>int64 nonce = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setNonce($var)
    {
        GPBUtil::checkInt64($var);
        $this->nonce = $var;

        return $this;
    }

}

