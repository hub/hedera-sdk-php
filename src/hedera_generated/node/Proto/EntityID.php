<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: get_by_key.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * The ID for a single entity (account, livehash, file, or smart contract)
 * > The query that defines this message is no longer supported.
 *
 * @deprecated
 * Generated from protobuf message <code>proto.EntityID</code>
 */
class EntityID extends \Google\Protobuf\Internal\Message
{
    protected $entity;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\AccountID $accountID
     *          *
     *           The Account ID for the cryptocurrency account
     *     @type \Proto\LiveHash $liveHash
     *          *
     *           A uniquely identifying livehash of an account
     *     @type \Proto\FileID $fileID
     *          *
     *           The file ID of the file
     *     @type \Proto\ContractID $contractID
     *          *
     *           The smart contract ID that identifies instance
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GetByKey::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The Account ID for the cryptocurrency account
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 1;</code>
     * @return \Proto\AccountID|null
     */
    public function getAccountID()
    {
        return $this->readOneof(1);
    }

    public function hasAccountID()
    {
        return $this->hasOneof(1);
    }

    /**
     **
     * The Account ID for the cryptocurrency account
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 1;</code>
     * @param \Proto\AccountID $var
     * @return $this
     */
    public function setAccountID($var)
    {
        GPBUtil::checkMessage($var, \Proto\AccountID::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     **
     * A uniquely identifying livehash of an account
     *
     * Generated from protobuf field <code>.proto.LiveHash liveHash = 2;</code>
     * @return \Proto\LiveHash|null
     */
    public function getLiveHash()
    {
        return $this->readOneof(2);
    }

    public function hasLiveHash()
    {
        return $this->hasOneof(2);
    }

    /**
     **
     * A uniquely identifying livehash of an account
     *
     * Generated from protobuf field <code>.proto.LiveHash liveHash = 2;</code>
     * @param \Proto\LiveHash $var
     * @return $this
     */
    public function setLiveHash($var)
    {
        GPBUtil::checkMessage($var, \Proto\LiveHash::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     **
     * The file ID of the file
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 3;</code>
     * @return \Proto\FileID|null
     */
    public function getFileID()
    {
        return $this->readOneof(3);
    }

    public function hasFileID()
    {
        return $this->hasOneof(3);
    }

    /**
     **
     * The file ID of the file
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 3;</code>
     * @param \Proto\FileID $var
     * @return $this
     */
    public function setFileID($var)
    {
        GPBUtil::checkMessage($var, \Proto\FileID::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     **
     * The smart contract ID that identifies instance
     *
     * Generated from protobuf field <code>.proto.ContractID contractID = 4;</code>
     * @return \Proto\ContractID|null
     */
    public function getContractID()
    {
        return $this->readOneof(4);
    }

    public function hasContractID()
    {
        return $this->hasOneof(4);
    }

    /**
     **
     * The smart contract ID that identifies instance
     *
     * Generated from protobuf field <code>.proto.ContractID contractID = 4;</code>
     * @param \Proto\ContractID $var
     * @return $this
     */
    public function setContractID($var)
    {
        GPBUtil::checkMessage($var, \Proto\ContractID::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getEntity()
    {
        return $this->whichOneof("entity");
    }

}

