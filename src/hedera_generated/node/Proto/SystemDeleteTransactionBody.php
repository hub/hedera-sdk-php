<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: system_delete.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Delete a file or contract bytecode as an administrative transaction.
 * > Note
 * >> A system delete/undelete for a `contractID` is not supported and
 * >> SHALL return `INVALID_FILE_ID` or `MISSING_ENTITY_ID`.
 * This transaction MAY be reversed by the `systemUndelete` transaction.
 * A file deleted via `fileDelete`, however SHALL be irrecoverable.<br/>
 * This transaction MUST specify an expiration timestamp (with seconds
 * precision). The file SHALL be permanently removed from state when
 * network consensus time exceeds the specified expiration time.<br/>
 * This transaction MUST be signed by an Hedera administrative ("system")
 * account.
 * ### What is a "system" file
 * A "system" file is any file with a file number less than or equal to the
 * current configuration value for `ledger.numReservedSystemEntities`,
 * typically `750`.
 * ### Block Stream Effects
 * None
 *
 * Generated from protobuf message <code>proto.SystemDeleteTransactionBody</code>
 */
class SystemDeleteTransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A timestamp indicating when the file will be removed from state.
     * <p>
     * This value SHALL be expressed in seconds since the `epoch`. The `epoch`
     * SHALL be the UNIX epoch with 0 at `1970-01-01T00:00:00.000Z`.<br/>
     * This field is REQUIRED.
     *
     * Generated from protobuf field <code>.proto.TimestampSeconds expirationTime = 3;</code>
     */
    protected $expirationTime = null;
    protected $id;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\FileID $fileID
     *          *
     *           A file identifier.
     *           <p>
     *           The identified file MUST exist in the HFS.<br/>
     *           The identified file MUST NOT be deleted.<br/>
     *           The identified file MUST NOT be a "system" file.<br/>
     *           This field is REQUIRED.
     *     @type \Proto\ContractID $contractID
     *          *
     *           A contract identifier.
     *           <p>
     *           The identified contract MUST exist in network state.<br/>
     *           The identified contract bytecode MUST NOT be deleted.<br/>
     *           <p>
     *           This option is _unsupported_.
     *     @type \Proto\TimestampSeconds $expirationTime
     *          *
     *           A timestamp indicating when the file will be removed from state.
     *           <p>
     *           This value SHALL be expressed in seconds since the `epoch`. The `epoch`
     *           SHALL be the UNIX epoch with 0 at `1970-01-01T00:00:00.000Z`.<br/>
     *           This field is REQUIRED.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\SystemDelete::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A file identifier.
     * <p>
     * The identified file MUST exist in the HFS.<br/>
     * The identified file MUST NOT be deleted.<br/>
     * The identified file MUST NOT be a "system" file.<br/>
     * This field is REQUIRED.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 1;</code>
     * @return \Proto\FileID|null
     */
    public function getFileID()
    {
        return $this->readOneof(1);
    }

    public function hasFileID()
    {
        return $this->hasOneof(1);
    }

    /**
     **
     * A file identifier.
     * <p>
     * The identified file MUST exist in the HFS.<br/>
     * The identified file MUST NOT be deleted.<br/>
     * The identified file MUST NOT be a "system" file.<br/>
     * This field is REQUIRED.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 1;</code>
     * @param \Proto\FileID $var
     * @return $this
     */
    public function setFileID($var)
    {
        GPBUtil::checkMessage($var, \Proto\FileID::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     **
     * A contract identifier.
     * <p>
     * The identified contract MUST exist in network state.<br/>
     * The identified contract bytecode MUST NOT be deleted.<br/>
     * <p>
     * This option is _unsupported_.
     *
     * Generated from protobuf field <code>.proto.ContractID contractID = 2;</code>
     * @return \Proto\ContractID|null
     */
    public function getContractID()
    {
        return $this->readOneof(2);
    }

    public function hasContractID()
    {
        return $this->hasOneof(2);
    }

    /**
     **
     * A contract identifier.
     * <p>
     * The identified contract MUST exist in network state.<br/>
     * The identified contract bytecode MUST NOT be deleted.<br/>
     * <p>
     * This option is _unsupported_.
     *
     * Generated from protobuf field <code>.proto.ContractID contractID = 2;</code>
     * @param \Proto\ContractID $var
     * @return $this
     */
    public function setContractID($var)
    {
        GPBUtil::checkMessage($var, \Proto\ContractID::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     **
     * A timestamp indicating when the file will be removed from state.
     * <p>
     * This value SHALL be expressed in seconds since the `epoch`. The `epoch`
     * SHALL be the UNIX epoch with 0 at `1970-01-01T00:00:00.000Z`.<br/>
     * This field is REQUIRED.
     *
     * Generated from protobuf field <code>.proto.TimestampSeconds expirationTime = 3;</code>
     * @return \Proto\TimestampSeconds|null
     */
    public function getExpirationTime()
    {
        return $this->expirationTime;
    }

    public function hasExpirationTime()
    {
        return isset($this->expirationTime);
    }

    public function clearExpirationTime()
    {
        unset($this->expirationTime);
    }

    /**
     **
     * A timestamp indicating when the file will be removed from state.
     * <p>
     * This value SHALL be expressed in seconds since the `epoch`. The `epoch`
     * SHALL be the UNIX epoch with 0 at `1970-01-01T00:00:00.000Z`.<br/>
     * This field is REQUIRED.
     *
     * Generated from protobuf field <code>.proto.TimestampSeconds expirationTime = 3;</code>
     * @param \Proto\TimestampSeconds $var
     * @return $this
     */
    public function setExpirationTime($var)
    {
        GPBUtil::checkMessage($var, \Proto\TimestampSeconds::class);
        $this->expirationTime = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getId()
    {
        return $this->whichOneof("id");
    }

}

