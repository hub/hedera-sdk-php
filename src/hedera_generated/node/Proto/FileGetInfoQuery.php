<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: file_get_info.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Query to request file metadata from the Hedera File Service (HFS).<br/>
 * This query requests all of the information _about_ a file, but none of the
 * _content_ of a file. A client should submit a `fileGetContents` query to
 * view the content of a file. File content _may_ also be available from a
 * block node or mirror node, generally at lower cost.
 * File metadata SHALL be available for active files and deleted files.<br/>
 * The size of a deleted file SHALL be `0` and the content SHALL be empty.
 *
 * Generated from protobuf message <code>proto.FileGetInfoQuery</code>
 */
class FileGetInfoQuery extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * Standard information sent with every query operation.<br/>
     * This includes the signed payment and what kind of response is requested
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.QueryHeader header = 1;</code>
     */
    protected $header = null;
    /**
     **
     * A file identifier.
     * <p>
     * This MUST be the identifier of a file that exists in HFS.<br/>
     * This value SHALL identify the file to be queried.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 2;</code>
     */
    protected $fileID = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\QueryHeader $header
     *          *
     *           Standard information sent with every query operation.<br/>
     *           This includes the signed payment and what kind of response is requested
     *           (cost, state proof, both, or neither).
     *     @type \Proto\FileID $fileID
     *          *
     *           A file identifier.
     *           <p>
     *           This MUST be the identifier of a file that exists in HFS.<br/>
     *           This value SHALL identify the file to be queried.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\FileGetInfo::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * Standard information sent with every query operation.<br/>
     * This includes the signed payment and what kind of response is requested
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.QueryHeader header = 1;</code>
     * @return \Proto\QueryHeader|null
     */
    public function getHeader()
    {
        return $this->header;
    }

    public function hasHeader()
    {
        return isset($this->header);
    }

    public function clearHeader()
    {
        unset($this->header);
    }

    /**
     **
     * Standard information sent with every query operation.<br/>
     * This includes the signed payment and what kind of response is requested
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.QueryHeader header = 1;</code>
     * @param \Proto\QueryHeader $var
     * @return $this
     */
    public function setHeader($var)
    {
        GPBUtil::checkMessage($var, \Proto\QueryHeader::class);
        $this->header = $var;

        return $this;
    }

    /**
     **
     * A file identifier.
     * <p>
     * This MUST be the identifier of a file that exists in HFS.<br/>
     * This value SHALL identify the file to be queried.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 2;</code>
     * @return \Proto\FileID|null
     */
    public function getFileID()
    {
        return $this->fileID;
    }

    public function hasFileID()
    {
        return isset($this->fileID);
    }

    public function clearFileID()
    {
        unset($this->fileID);
    }

    /**
     **
     * A file identifier.
     * <p>
     * This MUST be the identifier of a file that exists in HFS.<br/>
     * This value SHALL identify the file to be queried.
     *
     * Generated from protobuf field <code>.proto.FileID fileID = 2;</code>
     * @param \Proto\FileID $var
     * @return $this
     */
    public function setFileID($var)
    {
        GPBUtil::checkMessage($var, \Proto\FileID::class);
        $this->fileID = $var;

        return $this;
    }

}

