<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: crypto_get_account_balance.proto

namespace Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Query to read the HBAR balance of an account or contract.
 * This query SHALL return _only_ the HBAR balance for an account
 * or smart contract. Early releases of the network would return all
 * fungible/common token balances, but HIP-367 made it infeasible to
 * return all such balances. This query SHALL NOT return any information
 * beyond the current HBAR balance.
 *
 * Generated from protobuf message <code>proto.CryptoGetAccountBalanceQuery</code>
 */
class CryptoGetAccountBalanceQuery extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * Standard information sent with every query operation.<br/>
     * This includes the signed payment and what kind of response is requested
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.QueryHeader header = 1;</code>
     */
    protected $header = null;
    protected $balanceSource;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\QueryHeader $header
     *          *
     *           Standard information sent with every query operation.<br/>
     *           This includes the signed payment and what kind of response is requested
     *           (cost, state proof, both, or neither).
     *     @type \Proto\AccountID $accountID
     *          *
     *           An account identifier.<br/>
     *           This identifies an account for which the balance is requested.
     *           <p>
     *           Exactly one identifier MUST be provided.
     *     @type \Proto\ContractID $contractID
     *          *
     *           A smart contract identifier.<br/>
     *           This identifies a smart contract for which the balance is requested.
     *           <p>
     *           Exactly one identifier MUST be provided.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\CryptoGetAccountBalance::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * Standard information sent with every query operation.<br/>
     * This includes the signed payment and what kind of response is requested
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.QueryHeader header = 1;</code>
     * @return \Proto\QueryHeader|null
     */
    public function getHeader()
    {
        return $this->header;
    }

    public function hasHeader()
    {
        return isset($this->header);
    }

    public function clearHeader()
    {
        unset($this->header);
    }

    /**
     **
     * Standard information sent with every query operation.<br/>
     * This includes the signed payment and what kind of response is requested
     * (cost, state proof, both, or neither).
     *
     * Generated from protobuf field <code>.proto.QueryHeader header = 1;</code>
     * @param \Proto\QueryHeader $var
     * @return $this
     */
    public function setHeader($var)
    {
        GPBUtil::checkMessage($var, \Proto\QueryHeader::class);
        $this->header = $var;

        return $this;
    }

    /**
     **
     * An account identifier.<br/>
     * This identifies an account for which the balance is requested.
     * <p>
     * Exactly one identifier MUST be provided.
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 2;</code>
     * @return \Proto\AccountID|null
     */
    public function getAccountID()
    {
        return $this->readOneof(2);
    }

    public function hasAccountID()
    {
        return $this->hasOneof(2);
    }

    /**
     **
     * An account identifier.<br/>
     * This identifies an account for which the balance is requested.
     * <p>
     * Exactly one identifier MUST be provided.
     *
     * Generated from protobuf field <code>.proto.AccountID accountID = 2;</code>
     * @param \Proto\AccountID $var
     * @return $this
     */
    public function setAccountID($var)
    {
        GPBUtil::checkMessage($var, \Proto\AccountID::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     **
     * A smart contract identifier.<br/>
     * This identifies a smart contract for which the balance is requested.
     * <p>
     * Exactly one identifier MUST be provided.
     *
     * Generated from protobuf field <code>.proto.ContractID contractID = 3;</code>
     * @return \Proto\ContractID|null
     */
    public function getContractID()
    {
        return $this->readOneof(3);
    }

    public function hasContractID()
    {
        return $this->hasOneof(3);
    }

    /**
     **
     * A smart contract identifier.<br/>
     * This identifies a smart contract for which the balance is requested.
     * <p>
     * Exactly one identifier MUST be provided.
     *
     * Generated from protobuf field <code>.proto.ContractID contractID = 3;</code>
     * @param \Proto\ContractID $var
     * @return $this
     */
    public function setContractID($var)
    {
        GPBUtil::checkMessage($var, \Proto\ContractID::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getBalanceSource()
    {
        return $this->whichOneof("balanceSource");
    }

}

