<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: basic_types.proto

namespace Proto;

use UnexpectedValueException;

/**
 **
 * A specific hash algorithm.
 * We did not reuse Record Stream `HashAlgorithm` here because in all cases,
 * currently, this will be `SHA2_384` and if that is the default value then
 * we can save space by not serializing it, whereas `HASH_ALGORITHM_UNKNOWN`
 * is the default for Record Stream `HashAlgorithm`.
 * Note that enum values here MUST NOT match the name of any other enum value
 * in the same `package`, as protobuf follows `C++` scope rules and all enum
 * _names_ are treated as global constants within the `package`.
 *
 * Protobuf type <code>proto.BlockHashAlgorithm</code>
 */
class BlockHashAlgorithm
{
    /**
     **
     * A SHA2 algorithm SHA-384 hash.
     * <p>
     * This is the default value, if a field of this enumerated type is
     * not set, then this is the value that will be decoded when the
     * serialized message is read.
     *
     * Generated from protobuf enum <code>SHA2_384 = 0;</code>
     */
    const SHA2_384 = 0;

    private static $valueToName = [
        self::SHA2_384 => 'SHA2_384',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

