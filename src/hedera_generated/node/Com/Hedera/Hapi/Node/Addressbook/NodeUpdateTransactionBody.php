<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: node_update.proto

namespace Com\Hedera\Hapi\Node\Addressbook;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * Transaction body to modify address book node attributes.
 * - This transaction SHALL enable the node operator, as identified by the
 *   `admin_key`, to modify operational attributes of the node.
 * - This transaction MUST be signed by the active `admin_key` for the node.
 * - If this transaction sets a new value for the `admin_key`, then both the
 *   current `admin_key`, and the new `admin_key` MUST sign this transaction.
 * - This transaction SHALL NOT change any field that is not set (is null) in
 *   this transaction body.
 * - This SHALL create a pending update to the node, but the change SHALL NOT
 *   be immediately applied to the active configuration.
 * - All pending node updates SHALL be applied to the active network
 *   configuration during the next `freeze` transaction with the field
 *   `freeze_type` set to `PREPARE_UPGRADE`.
 * ### Block Stream Effects
 * None.
 *
 * Generated from protobuf message <code>com.hedera.hapi.node.addressbook.NodeUpdateTransactionBody</code>
 */
class NodeUpdateTransactionBody extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * A consensus node identifier in the network state.
     * <p>
     * The node identified MUST exist in the network address book.<br/>
     * The node identified MUST NOT be deleted.<br/>
     * This value is REQUIRED.
     *
     * Generated from protobuf field <code>uint64 node_id = 1;</code>
     */
    protected $node_id = 0;
    /**
     **
     * An account identifier.
     * <p>
     * If set, this SHALL replace the node account identifier.<br/>
     * If set, this transaction MUST be signed by the active `key` for _both_
     * the current node account _and_ the identified new node account.
     *
     * Generated from protobuf field <code>.proto.AccountID account_id = 2;</code>
     */
    protected $account_id = null;
    /**
     **
     * A short description of the node.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.<br/>
     * If set, this value SHALL replace the previous value.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue description = 3;</code>
     */
    protected $description = null;
    /**
     **
     * A list of service endpoints for gossip.
     * <p>
     * If set, this list MUST meet the following requirements.
     * <hr/>
     * These endpoints SHALL represent the published endpoints to which other
     * consensus nodes may _gossip_ transactions.<br/>
     * These endpoints SHOULD NOT specify both address and DNS name.<br/>
     * This list MUST NOT be empty.<br/>
     * This list MUST NOT contain more than `10` entries.<br/>
     * The first two entries in this list SHALL be the endpoints published to
     * all consensus nodes.<br/>
     * All other entries SHALL be reserved for future use.
     * <p>
     * Each network may have additional requirements for these endpoints.
     * A client MUST check network-specific documentation for those
     * details.<br/>
     * <blockquote>Example<blockquote>
     * Hedera Mainnet _requires_ that address be specified, and does not
     * permit DNS name (FQDN) to be specified.
     * </blockquote>
     * <blockquote>
     * Solo, however, _requires_ DNS name (FQDN) but also permits
     * address.
     * </blockquote></blockquote>
     * <p>
     * If set, the new list SHALL replace the existing list.
     *
     * Generated from protobuf field <code>repeated .proto.ServiceEndpoint gossip_endpoint = 4;</code>
     */
    private $gossip_endpoint;
    /**
     **
     * A list of service endpoints for gRPC calls.
     * <p>
     * If set, this list MUST meet the following requirements.
     * <hr/>
     * These endpoints SHALL represent the published endpoints to which clients
     * may submit transactions.<br/>
     * These endpoints SHOULD specify address and port.<br/>
     * These endpoints MAY specify a DNS name.<br/>
     * These endpoints SHOULD NOT specify both address and DNS name.<br/>
     * This list MUST NOT be empty.<br/>
     * This list MUST NOT contain more than `8` entries.
     * <p>
     * Each network may have additional requirements for these endpoints.
     * A client MUST check network-specific documentation for those
     * details.
     * <p>
     * If set, the new list SHALL replace the existing list.
     *
     * Generated from protobuf field <code>repeated .proto.ServiceEndpoint service_endpoint = 5;</code>
     */
    private $service_endpoint;
    /**
     **
     * A certificate used to sign gossip events.
     * <p>
     * This value MUST be a certificate of a type permitted for gossip
     * signatures.<br/>
     * This value MUST be the DER encoding of the certificate presented.
     * <p>
     * If set, the new value SHALL replace the existing bytes value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue gossip_ca_certificate = 6;</code>
     */
    protected $gossip_ca_certificate = null;
    /**
     **
     * A hash of the node gRPC TLS certificate.
     * <p>
     * This value MAY be used to verify the certificate presented by the node
     * during TLS negotiation for gRPC.<br/>
     * This value MUST be a SHA-384 hash.<br/>
     * The TLS certificate to be hashed MUST first be in PEM format and MUST be
     * encoded with UTF-8 NFKD encoding to a stream of bytes provided to
     * the hash algorithm.<br/>
     * <p>
     * If set, the new value SHALL replace the existing hash value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue grpc_certificate_hash = 7;</code>
     */
    protected $grpc_certificate_hash = null;
    /**
     **
     * An administrative key controlled by the node operator.
     * <p>
     * This field is OPTIONAL.<br/>
     * If set, this key MUST sign this transaction.<br/>
     * If set, this key MUST sign each subsequent transaction to
     * update this node.<br/>
     * If set, this field MUST contain a valid `Key` value.<br/>
     * If set, this field MUST NOT be set to an empty `KeyList`.
     *
     * Generated from protobuf field <code>.proto.Key admin_key = 8;</code>
     */
    protected $admin_key = null;
    /**
     **
     * A boolean indicating that this node has chosen to decline node rewards
     * distributed at the end of staking period.
     * <p>
     * This node SHALL NOT receive reward if this value is set, and `true`.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue decline_reward = 9;</code>
     */
    protected $decline_reward = null;
    /**
     **
     * A web proxy for gRPC from non-gRPC clients.
     * <p>
     * This endpoint SHALL be a Fully Qualified Domain Name (FQDN) using the HTTPS
     * protocol, and SHALL support gRPC-Web for use by browser-based clients.<br/>
     * This endpoint MUST be signed by a trusted certificate authority.<br/>
     * This endpoint MUST use a valid port and SHALL be reachable over TLS.<br/>
     * This field MAY be omitted if the node does not support gRPC-Web access.<br/>
     * This field MUST be updated if the gRPC-Web endpoint changes.<br/>
     * This field SHALL enable frontend clients to avoid hard-coded proxy endpoints.
     *
     * Generated from protobuf field <code>.proto.ServiceEndpoint grpc_proxy_endpoint = 10;</code>
     */
    protected $grpc_proxy_endpoint = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $node_id
     *          *
     *           A consensus node identifier in the network state.
     *           <p>
     *           The node identified MUST exist in the network address book.<br/>
     *           The node identified MUST NOT be deleted.<br/>
     *           This value is REQUIRED.
     *     @type \Proto\AccountID $account_id
     *          *
     *           An account identifier.
     *           <p>
     *           If set, this SHALL replace the node account identifier.<br/>
     *           If set, this transaction MUST be signed by the active `key` for _both_
     *           the current node account _and_ the identified new node account.
     *     @type \Google\Protobuf\StringValue $description
     *          *
     *           A short description of the node.
     *           <p>
     *           This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     *           (default 100) bytes when encoded as UTF-8.<br/>
     *           If set, this value SHALL replace the previous value.
     *     @type \Proto\ServiceEndpoint[] $gossip_endpoint
     *          *
     *           A list of service endpoints for gossip.
     *           <p>
     *           If set, this list MUST meet the following requirements.
     *           <hr/>
     *           These endpoints SHALL represent the published endpoints to which other
     *           consensus nodes may _gossip_ transactions.<br/>
     *           These endpoints SHOULD NOT specify both address and DNS name.<br/>
     *           This list MUST NOT be empty.<br/>
     *           This list MUST NOT contain more than `10` entries.<br/>
     *           The first two entries in this list SHALL be the endpoints published to
     *           all consensus nodes.<br/>
     *           All other entries SHALL be reserved for future use.
     *           <p>
     *           Each network may have additional requirements for these endpoints.
     *           A client MUST check network-specific documentation for those
     *           details.<br/>
     *           <blockquote>Example<blockquote>
     *           Hedera Mainnet _requires_ that address be specified, and does not
     *           permit DNS name (FQDN) to be specified.
     *           </blockquote>
     *           <blockquote>
     *           Solo, however, _requires_ DNS name (FQDN) but also permits
     *           address.
     *           </blockquote></blockquote>
     *           <p>
     *           If set, the new list SHALL replace the existing list.
     *     @type \Proto\ServiceEndpoint[] $service_endpoint
     *          *
     *           A list of service endpoints for gRPC calls.
     *           <p>
     *           If set, this list MUST meet the following requirements.
     *           <hr/>
     *           These endpoints SHALL represent the published endpoints to which clients
     *           may submit transactions.<br/>
     *           These endpoints SHOULD specify address and port.<br/>
     *           These endpoints MAY specify a DNS name.<br/>
     *           These endpoints SHOULD NOT specify both address and DNS name.<br/>
     *           This list MUST NOT be empty.<br/>
     *           This list MUST NOT contain more than `8` entries.
     *           <p>
     *           Each network may have additional requirements for these endpoints.
     *           A client MUST check network-specific documentation for those
     *           details.
     *           <p>
     *           If set, the new list SHALL replace the existing list.
     *     @type \Google\Protobuf\BytesValue $gossip_ca_certificate
     *          *
     *           A certificate used to sign gossip events.
     *           <p>
     *           This value MUST be a certificate of a type permitted for gossip
     *           signatures.<br/>
     *           This value MUST be the DER encoding of the certificate presented.
     *           <p>
     *           If set, the new value SHALL replace the existing bytes value.
     *     @type \Google\Protobuf\BytesValue $grpc_certificate_hash
     *          *
     *           A hash of the node gRPC TLS certificate.
     *           <p>
     *           This value MAY be used to verify the certificate presented by the node
     *           during TLS negotiation for gRPC.<br/>
     *           This value MUST be a SHA-384 hash.<br/>
     *           The TLS certificate to be hashed MUST first be in PEM format and MUST be
     *           encoded with UTF-8 NFKD encoding to a stream of bytes provided to
     *           the hash algorithm.<br/>
     *           <p>
     *           If set, the new value SHALL replace the existing hash value.
     *     @type \Proto\Key $admin_key
     *          *
     *           An administrative key controlled by the node operator.
     *           <p>
     *           This field is OPTIONAL.<br/>
     *           If set, this key MUST sign this transaction.<br/>
     *           If set, this key MUST sign each subsequent transaction to
     *           update this node.<br/>
     *           If set, this field MUST contain a valid `Key` value.<br/>
     *           If set, this field MUST NOT be set to an empty `KeyList`.
     *     @type \Google\Protobuf\BoolValue $decline_reward
     *          *
     *           A boolean indicating that this node has chosen to decline node rewards
     *           distributed at the end of staking period.
     *           <p>
     *           This node SHALL NOT receive reward if this value is set, and `true`.
     *     @type \Proto\ServiceEndpoint $grpc_proxy_endpoint
     *          *
     *           A web proxy for gRPC from non-gRPC clients.
     *           <p>
     *           This endpoint SHALL be a Fully Qualified Domain Name (FQDN) using the HTTPS
     *           protocol, and SHALL support gRPC-Web for use by browser-based clients.<br/>
     *           This endpoint MUST be signed by a trusted certificate authority.<br/>
     *           This endpoint MUST use a valid port and SHALL be reachable over TLS.<br/>
     *           This field MAY be omitted if the node does not support gRPC-Web access.<br/>
     *           This field MUST be updated if the gRPC-Web endpoint changes.<br/>
     *           This field SHALL enable frontend clients to avoid hard-coded proxy endpoints.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\NodeUpdate::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * A consensus node identifier in the network state.
     * <p>
     * The node identified MUST exist in the network address book.<br/>
     * The node identified MUST NOT be deleted.<br/>
     * This value is REQUIRED.
     *
     * Generated from protobuf field <code>uint64 node_id = 1;</code>
     * @return int|string
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     **
     * A consensus node identifier in the network state.
     * <p>
     * The node identified MUST exist in the network address book.<br/>
     * The node identified MUST NOT be deleted.<br/>
     * This value is REQUIRED.
     *
     * Generated from protobuf field <code>uint64 node_id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setNodeId($var)
    {
        GPBUtil::checkUint64($var);
        $this->node_id = $var;

        return $this;
    }

    /**
     **
     * An account identifier.
     * <p>
     * If set, this SHALL replace the node account identifier.<br/>
     * If set, this transaction MUST be signed by the active `key` for _both_
     * the current node account _and_ the identified new node account.
     *
     * Generated from protobuf field <code>.proto.AccountID account_id = 2;</code>
     * @return \Proto\AccountID|null
     */
    public function getAccountId()
    {
        return $this->account_id;
    }

    public function hasAccountId()
    {
        return isset($this->account_id);
    }

    public function clearAccountId()
    {
        unset($this->account_id);
    }

    /**
     **
     * An account identifier.
     * <p>
     * If set, this SHALL replace the node account identifier.<br/>
     * If set, this transaction MUST be signed by the active `key` for _both_
     * the current node account _and_ the identified new node account.
     *
     * Generated from protobuf field <code>.proto.AccountID account_id = 2;</code>
     * @param \Proto\AccountID $var
     * @return $this
     */
    public function setAccountId($var)
    {
        GPBUtil::checkMessage($var, \Proto\AccountID::class);
        $this->account_id = $var;

        return $this;
    }

    /**
     **
     * A short description of the node.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.<br/>
     * If set, this value SHALL replace the previous value.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue description = 3;</code>
     * @return \Google\Protobuf\StringValue|null
     */
    public function getDescription()
    {
        return $this->description;
    }

    public function hasDescription()
    {
        return isset($this->description);
    }

    public function clearDescription()
    {
        unset($this->description);
    }

    /**
     * Returns the unboxed value from <code>getDescription()</code>

     **
     * A short description of the node.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.<br/>
     * If set, this value SHALL replace the previous value.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue description = 3;</code>
     * @return string|null
     */
    public function getDescriptionUnwrapped()
    {
        return $this->readWrapperValue("description");
    }

    /**
     **
     * A short description of the node.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.<br/>
     * If set, this value SHALL replace the previous value.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue description = 3;</code>
     * @param \Google\Protobuf\StringValue $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\StringValue::class);
        $this->description = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\StringValue object.

     **
     * A short description of the node.
     * <p>
     * This value, if set, MUST NOT exceed `transaction.maxMemoUtf8Bytes`
     * (default 100) bytes when encoded as UTF-8.<br/>
     * If set, this value SHALL replace the previous value.
     *
     * Generated from protobuf field <code>.google.protobuf.StringValue description = 3;</code>
     * @param string|null $var
     * @return $this
     */
    public function setDescriptionUnwrapped($var)
    {
        $this->writeWrapperValue("description", $var);
        return $this;}

    /**
     **
     * A list of service endpoints for gossip.
     * <p>
     * If set, this list MUST meet the following requirements.
     * <hr/>
     * These endpoints SHALL represent the published endpoints to which other
     * consensus nodes may _gossip_ transactions.<br/>
     * These endpoints SHOULD NOT specify both address and DNS name.<br/>
     * This list MUST NOT be empty.<br/>
     * This list MUST NOT contain more than `10` entries.<br/>
     * The first two entries in this list SHALL be the endpoints published to
     * all consensus nodes.<br/>
     * All other entries SHALL be reserved for future use.
     * <p>
     * Each network may have additional requirements for these endpoints.
     * A client MUST check network-specific documentation for those
     * details.<br/>
     * <blockquote>Example<blockquote>
     * Hedera Mainnet _requires_ that address be specified, and does not
     * permit DNS name (FQDN) to be specified.
     * </blockquote>
     * <blockquote>
     * Solo, however, _requires_ DNS name (FQDN) but also permits
     * address.
     * </blockquote></blockquote>
     * <p>
     * If set, the new list SHALL replace the existing list.
     *
     * Generated from protobuf field <code>repeated .proto.ServiceEndpoint gossip_endpoint = 4;</code>
     * @return RepeatedField<\Proto\ServiceEndpoint>
     */
    public function getGossipEndpoint()
    {
        return $this->gossip_endpoint;
    }

    /**
     **
     * A list of service endpoints for gossip.
     * <p>
     * If set, this list MUST meet the following requirements.
     * <hr/>
     * These endpoints SHALL represent the published endpoints to which other
     * consensus nodes may _gossip_ transactions.<br/>
     * These endpoints SHOULD NOT specify both address and DNS name.<br/>
     * This list MUST NOT be empty.<br/>
     * This list MUST NOT contain more than `10` entries.<br/>
     * The first two entries in this list SHALL be the endpoints published to
     * all consensus nodes.<br/>
     * All other entries SHALL be reserved for future use.
     * <p>
     * Each network may have additional requirements for these endpoints.
     * A client MUST check network-specific documentation for those
     * details.<br/>
     * <blockquote>Example<blockquote>
     * Hedera Mainnet _requires_ that address be specified, and does not
     * permit DNS name (FQDN) to be specified.
     * </blockquote>
     * <blockquote>
     * Solo, however, _requires_ DNS name (FQDN) but also permits
     * address.
     * </blockquote></blockquote>
     * <p>
     * If set, the new list SHALL replace the existing list.
     *
     * Generated from protobuf field <code>repeated .proto.ServiceEndpoint gossip_endpoint = 4;</code>
     * @param \Proto\ServiceEndpoint[] $var
     * @return $this
     */
    public function setGossipEndpoint($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Proto\ServiceEndpoint::class);
        $this->gossip_endpoint = $arr;

        return $this;
    }

    /**
     **
     * A list of service endpoints for gRPC calls.
     * <p>
     * If set, this list MUST meet the following requirements.
     * <hr/>
     * These endpoints SHALL represent the published endpoints to which clients
     * may submit transactions.<br/>
     * These endpoints SHOULD specify address and port.<br/>
     * These endpoints MAY specify a DNS name.<br/>
     * These endpoints SHOULD NOT specify both address and DNS name.<br/>
     * This list MUST NOT be empty.<br/>
     * This list MUST NOT contain more than `8` entries.
     * <p>
     * Each network may have additional requirements for these endpoints.
     * A client MUST check network-specific documentation for those
     * details.
     * <p>
     * If set, the new list SHALL replace the existing list.
     *
     * Generated from protobuf field <code>repeated .proto.ServiceEndpoint service_endpoint = 5;</code>
     * @return RepeatedField<\Proto\ServiceEndpoint>
     */
    public function getServiceEndpoint()
    {
        return $this->service_endpoint;
    }

    /**
     **
     * A list of service endpoints for gRPC calls.
     * <p>
     * If set, this list MUST meet the following requirements.
     * <hr/>
     * These endpoints SHALL represent the published endpoints to which clients
     * may submit transactions.<br/>
     * These endpoints SHOULD specify address and port.<br/>
     * These endpoints MAY specify a DNS name.<br/>
     * These endpoints SHOULD NOT specify both address and DNS name.<br/>
     * This list MUST NOT be empty.<br/>
     * This list MUST NOT contain more than `8` entries.
     * <p>
     * Each network may have additional requirements for these endpoints.
     * A client MUST check network-specific documentation for those
     * details.
     * <p>
     * If set, the new list SHALL replace the existing list.
     *
     * Generated from protobuf field <code>repeated .proto.ServiceEndpoint service_endpoint = 5;</code>
     * @param \Proto\ServiceEndpoint[] $var
     * @return $this
     */
    public function setServiceEndpoint($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Proto\ServiceEndpoint::class);
        $this->service_endpoint = $arr;

        return $this;
    }

    /**
     **
     * A certificate used to sign gossip events.
     * <p>
     * This value MUST be a certificate of a type permitted for gossip
     * signatures.<br/>
     * This value MUST be the DER encoding of the certificate presented.
     * <p>
     * If set, the new value SHALL replace the existing bytes value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue gossip_ca_certificate = 6;</code>
     * @return \Google\Protobuf\BytesValue|null
     */
    public function getGossipCaCertificate()
    {
        return $this->gossip_ca_certificate;
    }

    public function hasGossipCaCertificate()
    {
        return isset($this->gossip_ca_certificate);
    }

    public function clearGossipCaCertificate()
    {
        unset($this->gossip_ca_certificate);
    }

    /**
     * Returns the unboxed value from <code>getGossipCaCertificate()</code>

     **
     * A certificate used to sign gossip events.
     * <p>
     * This value MUST be a certificate of a type permitted for gossip
     * signatures.<br/>
     * This value MUST be the DER encoding of the certificate presented.
     * <p>
     * If set, the new value SHALL replace the existing bytes value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue gossip_ca_certificate = 6;</code>
     * @return string|null
     */
    public function getGossipCaCertificateUnwrapped()
    {
        return $this->readWrapperValue("gossip_ca_certificate");
    }

    /**
     **
     * A certificate used to sign gossip events.
     * <p>
     * This value MUST be a certificate of a type permitted for gossip
     * signatures.<br/>
     * This value MUST be the DER encoding of the certificate presented.
     * <p>
     * If set, the new value SHALL replace the existing bytes value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue gossip_ca_certificate = 6;</code>
     * @param \Google\Protobuf\BytesValue $var
     * @return $this
     */
    public function setGossipCaCertificate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\BytesValue::class);
        $this->gossip_ca_certificate = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\BytesValue object.

     **
     * A certificate used to sign gossip events.
     * <p>
     * This value MUST be a certificate of a type permitted for gossip
     * signatures.<br/>
     * This value MUST be the DER encoding of the certificate presented.
     * <p>
     * If set, the new value SHALL replace the existing bytes value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue gossip_ca_certificate = 6;</code>
     * @param string|null $var
     * @return $this
     */
    public function setGossipCaCertificateUnwrapped($var)
    {
        $this->writeWrapperValue("gossip_ca_certificate", $var);
        return $this;}

    /**
     **
     * A hash of the node gRPC TLS certificate.
     * <p>
     * This value MAY be used to verify the certificate presented by the node
     * during TLS negotiation for gRPC.<br/>
     * This value MUST be a SHA-384 hash.<br/>
     * The TLS certificate to be hashed MUST first be in PEM format and MUST be
     * encoded with UTF-8 NFKD encoding to a stream of bytes provided to
     * the hash algorithm.<br/>
     * <p>
     * If set, the new value SHALL replace the existing hash value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue grpc_certificate_hash = 7;</code>
     * @return \Google\Protobuf\BytesValue|null
     */
    public function getGrpcCertificateHash()
    {
        return $this->grpc_certificate_hash;
    }

    public function hasGrpcCertificateHash()
    {
        return isset($this->grpc_certificate_hash);
    }

    public function clearGrpcCertificateHash()
    {
        unset($this->grpc_certificate_hash);
    }

    /**
     * Returns the unboxed value from <code>getGrpcCertificateHash()</code>

     **
     * A hash of the node gRPC TLS certificate.
     * <p>
     * This value MAY be used to verify the certificate presented by the node
     * during TLS negotiation for gRPC.<br/>
     * This value MUST be a SHA-384 hash.<br/>
     * The TLS certificate to be hashed MUST first be in PEM format and MUST be
     * encoded with UTF-8 NFKD encoding to a stream of bytes provided to
     * the hash algorithm.<br/>
     * <p>
     * If set, the new value SHALL replace the existing hash value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue grpc_certificate_hash = 7;</code>
     * @return string|null
     */
    public function getGrpcCertificateHashUnwrapped()
    {
        return $this->readWrapperValue("grpc_certificate_hash");
    }

    /**
     **
     * A hash of the node gRPC TLS certificate.
     * <p>
     * This value MAY be used to verify the certificate presented by the node
     * during TLS negotiation for gRPC.<br/>
     * This value MUST be a SHA-384 hash.<br/>
     * The TLS certificate to be hashed MUST first be in PEM format and MUST be
     * encoded with UTF-8 NFKD encoding to a stream of bytes provided to
     * the hash algorithm.<br/>
     * <p>
     * If set, the new value SHALL replace the existing hash value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue grpc_certificate_hash = 7;</code>
     * @param \Google\Protobuf\BytesValue $var
     * @return $this
     */
    public function setGrpcCertificateHash($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\BytesValue::class);
        $this->grpc_certificate_hash = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\BytesValue object.

     **
     * A hash of the node gRPC TLS certificate.
     * <p>
     * This value MAY be used to verify the certificate presented by the node
     * during TLS negotiation for gRPC.<br/>
     * This value MUST be a SHA-384 hash.<br/>
     * The TLS certificate to be hashed MUST first be in PEM format and MUST be
     * encoded with UTF-8 NFKD encoding to a stream of bytes provided to
     * the hash algorithm.<br/>
     * <p>
     * If set, the new value SHALL replace the existing hash value.
     *
     * Generated from protobuf field <code>.google.protobuf.BytesValue grpc_certificate_hash = 7;</code>
     * @param string|null $var
     * @return $this
     */
    public function setGrpcCertificateHashUnwrapped($var)
    {
        $this->writeWrapperValue("grpc_certificate_hash", $var);
        return $this;}

    /**
     **
     * An administrative key controlled by the node operator.
     * <p>
     * This field is OPTIONAL.<br/>
     * If set, this key MUST sign this transaction.<br/>
     * If set, this key MUST sign each subsequent transaction to
     * update this node.<br/>
     * If set, this field MUST contain a valid `Key` value.<br/>
     * If set, this field MUST NOT be set to an empty `KeyList`.
     *
     * Generated from protobuf field <code>.proto.Key admin_key = 8;</code>
     * @return \Proto\Key|null
     */
    public function getAdminKey()
    {
        return $this->admin_key;
    }

    public function hasAdminKey()
    {
        return isset($this->admin_key);
    }

    public function clearAdminKey()
    {
        unset($this->admin_key);
    }

    /**
     **
     * An administrative key controlled by the node operator.
     * <p>
     * This field is OPTIONAL.<br/>
     * If set, this key MUST sign this transaction.<br/>
     * If set, this key MUST sign each subsequent transaction to
     * update this node.<br/>
     * If set, this field MUST contain a valid `Key` value.<br/>
     * If set, this field MUST NOT be set to an empty `KeyList`.
     *
     * Generated from protobuf field <code>.proto.Key admin_key = 8;</code>
     * @param \Proto\Key $var
     * @return $this
     */
    public function setAdminKey($var)
    {
        GPBUtil::checkMessage($var, \Proto\Key::class);
        $this->admin_key = $var;

        return $this;
    }

    /**
     **
     * A boolean indicating that this node has chosen to decline node rewards
     * distributed at the end of staking period.
     * <p>
     * This node SHALL NOT receive reward if this value is set, and `true`.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue decline_reward = 9;</code>
     * @return \Google\Protobuf\BoolValue|null
     */
    public function getDeclineReward()
    {
        return $this->decline_reward;
    }

    public function hasDeclineReward()
    {
        return isset($this->decline_reward);
    }

    public function clearDeclineReward()
    {
        unset($this->decline_reward);
    }

    /**
     * Returns the unboxed value from <code>getDeclineReward()</code>

     **
     * A boolean indicating that this node has chosen to decline node rewards
     * distributed at the end of staking period.
     * <p>
     * This node SHALL NOT receive reward if this value is set, and `true`.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue decline_reward = 9;</code>
     * @return bool|null
     */
    public function getDeclineRewardUnwrapped()
    {
        return $this->readWrapperValue("decline_reward");
    }

    /**
     **
     * A boolean indicating that this node has chosen to decline node rewards
     * distributed at the end of staking period.
     * <p>
     * This node SHALL NOT receive reward if this value is set, and `true`.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue decline_reward = 9;</code>
     * @param \Google\Protobuf\BoolValue $var
     * @return $this
     */
    public function setDeclineReward($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\BoolValue::class);
        $this->decline_reward = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\BoolValue object.

     **
     * A boolean indicating that this node has chosen to decline node rewards
     * distributed at the end of staking period.
     * <p>
     * This node SHALL NOT receive reward if this value is set, and `true`.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue decline_reward = 9;</code>
     * @param bool|null $var
     * @return $this
     */
    public function setDeclineRewardUnwrapped($var)
    {
        $this->writeWrapperValue("decline_reward", $var);
        return $this;}

    /**
     **
     * A web proxy for gRPC from non-gRPC clients.
     * <p>
     * This endpoint SHALL be a Fully Qualified Domain Name (FQDN) using the HTTPS
     * protocol, and SHALL support gRPC-Web for use by browser-based clients.<br/>
     * This endpoint MUST be signed by a trusted certificate authority.<br/>
     * This endpoint MUST use a valid port and SHALL be reachable over TLS.<br/>
     * This field MAY be omitted if the node does not support gRPC-Web access.<br/>
     * This field MUST be updated if the gRPC-Web endpoint changes.<br/>
     * This field SHALL enable frontend clients to avoid hard-coded proxy endpoints.
     *
     * Generated from protobuf field <code>.proto.ServiceEndpoint grpc_proxy_endpoint = 10;</code>
     * @return \Proto\ServiceEndpoint|null
     */
    public function getGrpcProxyEndpoint()
    {
        return $this->grpc_proxy_endpoint;
    }

    public function hasGrpcProxyEndpoint()
    {
        return isset($this->grpc_proxy_endpoint);
    }

    public function clearGrpcProxyEndpoint()
    {
        unset($this->grpc_proxy_endpoint);
    }

    /**
     **
     * A web proxy for gRPC from non-gRPC clients.
     * <p>
     * This endpoint SHALL be a Fully Qualified Domain Name (FQDN) using the HTTPS
     * protocol, and SHALL support gRPC-Web for use by browser-based clients.<br/>
     * This endpoint MUST be signed by a trusted certificate authority.<br/>
     * This endpoint MUST use a valid port and SHALL be reachable over TLS.<br/>
     * This field MAY be omitted if the node does not support gRPC-Web access.<br/>
     * This field MUST be updated if the gRPC-Web endpoint changes.<br/>
     * This field SHALL enable frontend clients to avoid hard-coded proxy endpoints.
     *
     * Generated from protobuf field <code>.proto.ServiceEndpoint grpc_proxy_endpoint = 10;</code>
     * @param \Proto\ServiceEndpoint $var
     * @return $this
     */
    public function setGrpcProxyEndpoint($var)
    {
        GPBUtil::checkMessage($var, \Proto\ServiceEndpoint::class);
        $this->grpc_proxy_endpoint = $var;

        return $this;
    }

}

