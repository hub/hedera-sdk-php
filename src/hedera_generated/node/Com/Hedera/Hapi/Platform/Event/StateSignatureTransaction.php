<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: event/state_signature_transaction.proto

namespace Com\Hedera\Hapi\Platform\Event;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\RepeatedField;

/**
 **
 * An signature of a state snapshot gossiped to other nodes.
 * Each node SHALL hash the root of the merkle tree of a state snapshot every
 * round. Once this hash is calculated, it SHOULD be signed with the nodes
 * private signing key. This signature, together with the hash SHOULD be added
 * to an event as a StateSignatureTransaction.
 *
 * Generated from protobuf message <code>com.hedera.hapi.platform.event.StateSignatureTransaction</code>
 */
class StateSignatureTransaction extends \Google\Protobuf\Internal\Message
{
    /**
     **
     * The round number corresponding to the round number of the state snapshot
     * being signed.<br/>
     * This number MUST be greater than 0.
     *
     * Generated from protobuf field <code>int64 round = 1;</code>
     */
    protected $round = 0;
    /**
     **
     * The signature of state snapshot hash.<br/>
     * This signature MUST be a RSA signature with a maximum length of 384 bytes.<br/>
     * The signature algorithm used MUST be RSASSA-PKCS1-v1_5 with SHA-384.
     *
     * Generated from protobuf field <code>bytes signature = 2;</code>
     */
    protected $signature = '';
    /**
     **
     * The hash of the state snapshot being signed.<br/>
     * This hash MUST be a SHA-384 hash.
     *
     * Generated from protobuf field <code>bytes hash = 3;</code>
     */
    protected $hash = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $round
     *          *
     *           The round number corresponding to the round number of the state snapshot
     *           being signed.<br/>
     *           This number MUST be greater than 0.
     *     @type string $signature
     *          *
     *           The signature of state snapshot hash.<br/>
     *           This signature MUST be a RSA signature with a maximum length of 384 bytes.<br/>
     *           The signature algorithm used MUST be RSASSA-PKCS1-v1_5 with SHA-384.
     *     @type string $hash
     *          *
     *           The hash of the state snapshot being signed.<br/>
     *           This hash MUST be a SHA-384 hash.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Event\StateSignatureTransaction::initOnce();
        parent::__construct($data);
    }

    /**
     **
     * The round number corresponding to the round number of the state snapshot
     * being signed.<br/>
     * This number MUST be greater than 0.
     *
     * Generated from protobuf field <code>int64 round = 1;</code>
     * @return int|string
     */
    public function getRound()
    {
        return $this->round;
    }

    /**
     **
     * The round number corresponding to the round number of the state snapshot
     * being signed.<br/>
     * This number MUST be greater than 0.
     *
     * Generated from protobuf field <code>int64 round = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRound($var)
    {
        GPBUtil::checkInt64($var);
        $this->round = $var;

        return $this;
    }

    /**
     **
     * The signature of state snapshot hash.<br/>
     * This signature MUST be a RSA signature with a maximum length of 384 bytes.<br/>
     * The signature algorithm used MUST be RSASSA-PKCS1-v1_5 with SHA-384.
     *
     * Generated from protobuf field <code>bytes signature = 2;</code>
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     **
     * The signature of state snapshot hash.<br/>
     * This signature MUST be a RSA signature with a maximum length of 384 bytes.<br/>
     * The signature algorithm used MUST be RSASSA-PKCS1-v1_5 with SHA-384.
     *
     * Generated from protobuf field <code>bytes signature = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, False);
        $this->signature = $var;

        return $this;
    }

    /**
     **
     * The hash of the state snapshot being signed.<br/>
     * This hash MUST be a SHA-384 hash.
     *
     * Generated from protobuf field <code>bytes hash = 3;</code>
     * @return string
     */
    public function getHash()
    {
        return $this->hash;
    }

    /**
     **
     * The hash of the state snapshot being signed.<br/>
     * This hash MUST be a SHA-384 hash.
     *
     * Generated from protobuf field <code>bytes hash = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->hash = $var;

        return $this;
    }

}

